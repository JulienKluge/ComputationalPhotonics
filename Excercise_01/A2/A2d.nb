(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    270983,       5029]
NotebookOptionsPosition[    269636,       4979]
NotebookOutlinePosition[    269978,       4994]
CellTagsIndexPosition[    269935,       4991]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Analytical", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierTransform", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"t", "^", "2"}]}], "]"}], ",", "t", ",", "w", ",", 
   RowBox[{"FourierParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", 
      RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["w", "2"], "4"]}]], " ", 
  SqrtBox["\[Pi]"]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculations", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "t_", "]"}], ":=", 
  RowBox[{"Exp", "[", 
   RowBox[{"-", 
    RowBox[{"t", "^", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "[", "w_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"w", "^", "2"}]}], "/", "4"}], "]"}], "*", 
   RowBox[{"Sqrt", "[", "Pi", "]"}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fexcp", "[", 
   RowBox[{"tMax_", ",", "dt_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tSamples", ",", "n", ",", "wSamples", ",", "fSamples"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tSamples", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "t", "]"}], "//", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"-", "tMax"}], ",", "tMax", ",", "dt"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "tSamples", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wSamples", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "n"}], "/", "2"}], ",", 
            RowBox[{
             RowBox[{"n", "/", "2"}], "-", "dt"}], ",", "1"}], "]"}], "/", 
          "n"}], "/", "dt"}], "*", "2", "Pi"}], "//", "N"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fSamples", "=", 
      RowBox[{"Fourier", "[", 
       RowBox[{"tSamples", "*", "dt", "*", 
        RowBox[{"Sqrt", "[", "n", "]"}], "*", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"m", "-", "1"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", 
            RowBox[{"Length", "[", "tSamples", "]"}]}], "}"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"wSamples", ",", 
        RowBox[{"Abs", "/@", "fSamples"}]}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g1", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"F", "[", "w", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"w", ",", 
          RowBox[{"-", "25"}], ",", "25"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"fexcp", "[", 
            RowBox[{"1", ",", 
             RowBox[{"1", "/", "d"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"d", ",", "1", ",", "10", ",", "2"}], "}"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.8", "]"}], ",", "Thin", ",", 
               RowBox[{
                RowBox[{"ColorData", "[", "97", "]"}], "@", "#"}]}], "}"}], 
             "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", "5"}], "]"}]}], ")"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"fexcp", "[", 
            RowBox[{"1", ",", 
             RowBox[{"1", "/", "d"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"d", ",", "1", ",", "10", ",", "2"}], "}"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "97", "]"}], "@", "#"}], ",", 
               RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}], "]"}], "&"}],
            "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", "5"}], "]"}]}], ")"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "25"}], ",", "25"}], "}"}], ",", "All"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"Thread", "[", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Frequency \[Nu] [Hz]\>\"", ",", 
          "\"\<Absolute magnitude \
|\[ScriptCapitalF]{exp(-\!\(\*SuperscriptBox[\(t\), \(2\)]\))}|\>\""}], "}"}],
         ",", 
        RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"LineLegend", "[", 
             RowBox[{
              RowBox[{"{", "Gray", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Analyt.\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"FontColor", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.2", "]"}]}]}], "}"}]}], 
                "]"}], "}"}]}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<\!\(\*SubscriptBox[\(t\), \
\(sample\)]\)\[Element][-1,1]\>\"", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                RowBox[{"FontColor", "\[Rule]", 
                 RowBox[{"GrayLevel", "[", "0.2", "]"}]}]}], "}"}]}], "]"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"PointLegend", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", "97", "]"}], "/@", 
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", "5"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"FontColor", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.2", "]"}]}]}], "}"}]}], 
                 "]"}], "&"}], "/@", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\[CapitalDelta]t = 1\>\"", ",", 
                 "\"\<\[CapitalDelta]t = 1/3\>\"", ",", 
                 "\"\<\[CapitalDelta]t = 1/5\>\"", ",", 
                 "\"\<\[CapitalDelta]t = 1/7\>\"", ",", 
                 "\"\<\[CapitalDelta]t = 1/9\>\""}], "}"}]}]}], "]"}], 
            "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"25", ",", "1.8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}], "}"}]}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], CapForm["Butt"], 
      LineBox[CompressedData["
1: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
DfZS0Mgvqv+uGiPI/ADkKr2l4EzdX23GQwygUe6vVHGoFCxuzj4327GNc7be
EXmaLwVlcq/HTiVu4HN99IOuVVLwCo1BwENzHe8fZ3Q71CYF/Q80fyeNr+I5
20Gd8z+lYN6QtlK1yzL+mPsDQ9OGFGxKP4jUjyzhnhJcqinc0tBZm/1Qr+Yi
bqj+6JGhijRkDV9l5Nv3B98NOqqldaUhl9CNSjuDeVzsiNDMnLE0HNW81+d9
eQ6fuBpnkuwoDflU0xT3+87gba79Pjd8pOF9Gylzo6WfeOk9qTyDUGlYkqCu
Uuz/Aw9MTOWYy5WGxSrmN8e6pnCn7JH9DeX/4nPnQ1djJ3Gz1yS7pGZpSJvb
WbZiN4GTPmY36E9LQ6HgsJ/FWmM41+B/i5Jr0vDWeztvRs1R/M/kDspvDhnY
atVgfwV+x2sZCv0TlWTgfxkZpjULQ3gO73yxs5YMrKjNJMYf/4Y/ltr7/eBh
GWjvIt32DX3BrfeVgVk7GSgSaikdPdyPHz6w5vzeUwbqn6as8IT14XuO6aYm
PJCBjfVyPPyHe/FtO/qm3gsZaF1UdhJf6MInbzHulCiTgeXRK2Wfhj/j7fcP
Wsw0ykCs6uzXwsFO/GlyU3n8pAxkPLj7u9j8Jzwwh3PaaVkGFvE2H7fb1447
vTGR0GOThVy1oV1skW047dMnj18KsvB9ph8xKqgZp3wVzK7VkIW5BiL6x+Q/
4NzTZj1xBrJwr7nOxFZrIz7I1L/3wFVZ+Hw78ZDd+Xq8jl/qipi7LDxOpuWd
1XmP58lciP4ZKAsbJu0qs5XrcG/NkbnYTFloXdzSenAvwq0PkgjXSmXh7Lj0
pmZCDX74hM1xWC8LhXTuVn8YrcIlHP8r+DEmC3P6/ku5XV2OM3ju+EZfkIWD
mhNOuibv8KkAJ55YZjnYTmO4IzLzFn/7dM4RkOWgun+M4m/7Ujw1Tz1JZK8c
PFe0lL0NX+PBZbeap/Xk4Cubmt96yiX46c5VxSeX5eBTJuVMTsUinDakc9bB
VQ72OHVSZt1f4ZSft4Nxfzm4/Sn74deyfHyRhXHiv+dy8LBY2SuvwFzc60T4
AediOUgU+/KqSTgH30wWT11ActDp1GSVTlk2zrJ399ntYTl4oOA/5QuamXjI
3fLXAb/l4AOnB23CAhk4T4u+AOdfOci/dfsdw/pzXPiSRbOwnDz0SdjPrLj8
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
       "]]}}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], Thickness[Tiny], Opacity[0.8], CapForm["Butt"], 
      LineBox[{{-3.141592653589793, 
       0.2642411176571154}, {-1.0471975511965976`, 1.3678794411714426`}, {
       1.0471975511965976`, 1.3678794411714426`}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.016666666666666666`], Thickness[Tiny], Opacity[0.8], CapForm["Butt"], 
      LineBox[{{-9.42477796076938, 0.08102557970390499}, {-6.731984257692414, 
       0.0872324509552715}, {-4.039190554615448, 
       0.0719547787003266}, {-1.3463968515384828`, 1.1919017842636743`}, {
       1.3463968515384828`, 1.1919017842636743`}, {4.039190554615448, 
       0.0719547787003266}, {6.731984257692414, 0.0872324509552715}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.016666666666666666`], Thickness[Tiny], Opacity[0.8], CapForm["Butt"], 
      LineBox[{{-15.707963267948966`, 
       0.05876359735421461}, {-12.851969946503699`, 
       0.06107605672784018}, {-9.995976625058432, 
       0.06890709891855488}, {-7.139983303613167, 
       0.08551192438786663}, {-4.283989982167899, 
       0.09510724841955924}, {-1.427996660722633, 1.1468081648995145`}, {
       1.427996660722633, 1.1468081648995145`}, {4.283989982167899, 
       0.09510724841955924}, {7.139983303613167, 0.08551192438786663}, {
       9.995976625058432, 0.06890709891855488}, {12.851969946503699`, 
       0.06107605672784018}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      0.016666666666666666`], Thickness[Tiny], Opacity[0.8], CapForm["Butt"], 
      LineBox[{{-21.991148575128552`, 
       0.04502104298037918}, {-19.058995431778076`, 
       0.04599765201503054}, {-16.126842288427607`, 
       0.049143612982428656`}, {-13.194689145077131`, 
       0.05522776698586287}, {-10.262536001726657`, 
       0.06605374632073464}, {-7.3303828583761845`, 
       0.08570113640722228}, {-4.39822971502571, 
       0.10441227492310508`}, {-1.4660765716752369`, 1.1266221717369131`}, {
       1.4660765716752369`, 1.1266221717369131`}, {4.39822971502571, 
       0.10441227492310508`}, {7.3303828583761845`, 0.08570113640722228}, {
       10.262536001726657`, 0.06605374632073464}, {13.194689145077131`, 
       0.05522776698586287}, {16.126842288427607`, 0.049143612982428656`}, {
       19.058995431778076`, 0.04599765201503054}}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
      0.016666666666666666`], Thickness[Tiny], Opacity[0.8], CapForm["Butt"], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQvXvTmX1WbjYHmn5eDpebuci+J8a7yd/H8oCZqL/Y
05uL7OPYTrmmBJkdEG+8v8tg6WJ7/Q0enJURxgcWzNuqySW51J4h6viZ3jiD
A0+Fpr4WK1luv4S9R8H1pNYBDxPla4lGq+3dozuX511VOfDOpfnYlVUb7C/F
8sYaHJY9UNFnbyfNu81egpUju/m24IG4bsbEXvY99qUbuZ5Env++f870yKvP
rn+E8e1hfKh6B5h6qHkOMPOg9jnA7IO6xwHmHqh7HWDuhfrHAeYfqH8dYP6F
hocDLDwAk5OGww==
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
      AbsoluteThickness[1.6], CapForm["Butt"], 
      PointBox[{{-3.141592653589793, 
       0.2642411176571154}, {-1.0471975511965976`, 1.3678794411714426`}, {
       1.0471975511965976`, 1.3678794411714426`}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.02], 
      AbsoluteThickness[1.6], CapForm["Butt"], 
      PointBox[{{-9.42477796076938, 0.08102557970390499}, {-6.731984257692414,
        0.0872324509552715}, {-4.039190554615448, 
       0.0719547787003266}, {-1.3463968515384828`, 1.1919017842636743`}, {
       1.3463968515384828`, 1.1919017842636743`}, {4.039190554615448, 
       0.0719547787003266}, {6.731984257692414, 0.0872324509552715}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.02], 
      AbsoluteThickness[1.6], CapForm["Butt"], 
      PointBox[{{-15.707963267948966`, 
       0.05876359735421461}, {-12.851969946503699`, 
       0.06107605672784018}, {-9.995976625058432, 
       0.06890709891855488}, {-7.139983303613167, 
       0.08551192438786663}, {-4.283989982167899, 
       0.09510724841955924}, {-1.427996660722633, 1.1468081648995145`}, {
       1.427996660722633, 1.1468081648995145`}, {4.283989982167899, 
       0.09510724841955924}, {7.139983303613167, 0.08551192438786663}, {
       9.995976625058432, 0.06890709891855488}, {12.851969946503699`, 
       0.06107605672784018}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.02], 
      AbsoluteThickness[1.6], CapForm["Butt"], 
      PointBox[{{-21.991148575128552`, 
       0.04502104298037918}, {-19.058995431778076`, 
       0.04599765201503054}, {-16.126842288427607`, 
       0.049143612982428656`}, {-13.194689145077131`, 
       0.05522776698586287}, {-10.262536001726657`, 
       0.06605374632073464}, {-7.3303828583761845`, 
       0.08570113640722228}, {-4.39822971502571, 
       0.10441227492310508`}, {-1.4660765716752369`, 1.1266221717369131`}, {
       1.4660765716752369`, 1.1266221717369131`}, {4.39822971502571, 
       0.10441227492310508`}, {7.3303828583761845`, 0.08570113640722228}, {
       10.262536001726657`, 0.06605374632073464}, {13.194689145077131`, 
       0.05522776698586287}, {16.126842288427607`, 0.049143612982428656`}, {
       19.058995431778076`, 0.04599765201503054}}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.02], 
      AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQvXvTmX1WbjYHmn5eDpebuci+J8a7yd/H8oCZqL/Y
05uL7OPYTrmmBJkdEG+8v8tg6WJ7/Q0enJURxgcWzNuqySW51J4h6viZ3jiD
A0+Fpr4WK1luv4S9R8H1pNYBDxPla4lGq+3dozuX511VOfDOpfnYlVUb7C/F
8sYaHJY9UNFnbyfNu81egpUju/m24IG4bsbEXvY99qUbuZ5Env++f870yKvP
rn+E8e1hfKh6B5h6qHkOMPOg9jnA7IO6xwHmHqh7HWDuhfrHAeYfqH8dYP6F
hocDLDwAk5OGww==
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.455091475925076*^-68},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       TagBox[
        GridBox[{{
           TemplateBox[{
             StyleBox[
             "\"Analyt.\"", {FontSize -> 14, FontColor -> GrayLevel[0.2]}, 
              StripOnInput -> False]}, "LineLegend", 
            DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(sample\\)]\\)\[Element][-1,1]\
\"", {FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> False]}, {
           TemplateBox[{
             StyleBox[
             "\"\[CapitalDelta]t = 1\"", {
              FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
              False], 
             StyleBox[
             "\"\[CapitalDelta]t = 1/3\"", {
              FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
              False], 
             StyleBox[
             "\"\[CapitalDelta]t = 1/5\"", {
              FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
              False], 
             StyleBox[
             "\"\[CapitalDelta]t = 1/7\"", {
              FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
              False], 
             StyleBox[
             "\"\[CapitalDelta]t = 1/9\"", {
              FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
              False]}, "PointLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}]}], 
               "]"}]& ), Editable -> True]}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
       TraditionalForm]], {25, 1.8}, {Right, Top}]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{
    FormBox[
     StyleBox[
     "\"Frequency \[Nu] [Hz]\"", FontSize -> 16, StripOnInput -> False], 
     TraditionalForm], 
    FormBox[
     StyleBox[
     "\"Absolute magnitude \
|\[ScriptCapitalF]{exp(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(2\\)]\\))}|\"", 
      FontSize -> 16, StripOnInput -> False], TraditionalForm]},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-25, 25}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"F", "[", "w", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"w", ",", 
          RowBox[{"-", "25"}], ",", "25"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"fexcp", "[", 
            RowBox[{"d", ",", 
             RowBox[{"1", "/", "10"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"d", ",", "1", ",", "3", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.8", "]"}], ",", "Thin", ",", 
               RowBox[{
                RowBox[{"ColorData", "[", "97", "]"}], "@", "#"}]}], "}"}], 
             "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", "5"}], "]"}]}], ")"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"fexcp", "[", 
            RowBox[{"d", ",", 
             RowBox[{"1", "/", "10"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"d", ",", "1", ",", "3", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "97", "]"}], "@", "#"}], ",", 
               RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}], "]"}], "&"}],
            "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", "5"}], "]"}]}], ")"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "25"}], ",", "25"}], "}"}], ",", "All"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"Thread", "[", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Frequency \[Nu] [Hz]\>\"", ",", 
          "\"\<Absolute magnitude \
|\[ScriptCapitalF]{exp(-\!\(\*SuperscriptBox[\(t\), \(2\)]\))}|\>\""}], "}"}],
         ",", 
        RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"LineLegend", "[", 
             RowBox[{
              RowBox[{"{", "Gray", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Analyt.\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"FontColor", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.2", "]"}]}]}], "}"}]}], 
                "]"}], "}"}]}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\[CapitalDelta]t = 1/10\>\"", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                RowBox[{"FontColor", "\[Rule]", 
                 RowBox[{"GrayLevel", "[", "0.2", "]"}]}]}], "}"}]}], "]"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"PointLegend", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", "97", "]"}], "/@", 
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", "5"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"FontColor", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.2", "]"}]}]}], "}"}]}], 
                 "]"}], "&"}], "/@", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(t\), \
\(smpl\)]\)\[Element][-1,1]\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(t\), \
\(smpl\)]\)\[Element][-1.5,1.5]\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(t\), \(smpl\)]\)\[Element][-2,2]\>\
\"", ",", "\"\<\!\(\*SubscriptBox[\(t\), \(smpl\)]\)\[Element][-2.5,2.5]\>\"",
                  ",", "\"\<\!\(\*SubscriptBox[\(t\), \
\(smpl\)]\)\[Element][-3,3]\>\""}], "}"}]}]}], "]"}], "}"}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"25", ",", "1.8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}], "}"}]}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], CapForm["Butt"], 
      LineBox[CompressedData["
1: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
DfZS0Mgvqv+uGiPI/ADkKr2l4EzdX23GQwygUe6vVHGoFCxuzj4327GNc7be
EXmaLwVlcq/HTiVu4HN99IOuVVLwCo1BwENzHe8fZ3Q71CYF/Q80fyeNr+I5
20Gd8z+lYN6QtlK1yzL+mPsDQ9OGFGxKP4jUjyzhnhJcqinc0tBZm/1Qr+Yi
bqj+6JGhijRkDV9l5Nv3B98NOqqldaUhl9CNSjuDeVzsiNDMnLE0HNW81+d9
eQ6fuBpnkuwoDflU0xT3+87gba79Pjd8pOF9Gylzo6WfeOk9qTyDUGlYkqCu
Uuz/Aw9MTOWYy5WGxSrmN8e6pnCn7JH9DeX/4nPnQ1djJ3Gz1yS7pGZpSJvb
WbZiN4GTPmY36E9LQ6HgsJ/FWmM41+B/i5Jr0vDWeztvRs1R/M/kDspvDhnY
atVgfwV+x2sZCv0TlWTgfxkZpjULQ3gO73yxs5YMrKjNJMYf/4Y/ltr7/eBh
GWjvIt32DX3BrfeVgVk7GSgSaikdPdyPHz6w5vzeUwbqn6as8IT14XuO6aYm
PJCBjfVyPPyHe/FtO/qm3gsZaF1UdhJf6MInbzHulCiTgeXRK2Wfhj/j7fcP
Wsw0ykCs6uzXwsFO/GlyU3n8pAxkPLj7u9j8Jzwwh3PaaVkGFvE2H7fb1447
vTGR0GOThVy1oV1skW047dMnj18KsvB9ph8xKqgZp3wVzK7VkIW5BiL6x+Q/
4NzTZj1xBrJwr7nOxFZrIz7I1L/3wFVZ+Hw78ZDd+Xq8jl/qipi7LDxOpuWd
1XmP58lciP4ZKAsbJu0qs5XrcG/NkbnYTFloXdzSenAvwq0PkgjXSmXh7Lj0
pmZCDX74hM1xWC8LhXTuVn8YrcIlHP8r+DEmC3P6/ku5XV2OM3ju+EZfkIWD
mhNOuibv8KkAJ55YZjnYTmO4IzLzFn/7dM4RkOWgun+M4m/7Ujw1Tz1JZK8c
PFe0lL0NX+PBZbeap/Xk4Cubmt96yiX46c5VxSeX5eBTJuVMTsUinDakc9bB
VQ72OHVSZt1f4ZSft4Nxfzm4/Sn74deyfHyRhXHiv+dy8LBY2SuvwFzc60T4
AediOUgU+/KqSTgH30wWT11ActDp1GSVTlk2zrJ399ntYTl4oOA/5QuamXjI
3fLXAb/l4AOnB23CAhk4T4u+AOdfOci/dfsdw/pzXPiSRbOwnDz0SdjPrLj8
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
       "]]}}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      Thickness[Tiny], Opacity[0.8], CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQHWcRqlmVZX9gM1dM1sNPC+yfryl80ZZjc6Ah0CDO
VXmhfYFi3/LJeZYHvgTvu/t650L7X1NXpS0oMDtwu8yk+MqJRfYtXMdV1xYZ
H/C4lfGOv2SJPW/94yc7SwwOfJrxZvLGf8vsdZ7/d+99q3XgxkzriytfrLK3
v2BxbNlHlQN7Qj2dQuZssF9c9Lij4bXsAYfJc+/bSW+zP+ES2rr5s+CBEweS
dFOr99hvjZZhn/X++/75O5Plso5/hPHtYXyoegeYeqh5DvZQ86D2OcDsg7rH
4RbUPVD3OnyAuhfqHwd3qH+g/nW4DPUvNDwcvkLDAxpeDvXQ8AIAWTSwgw==

       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.01388888888888889], 
      Thickness[Tiny], Opacity[0.8], CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQHWcRqlmVZX8gVeSamWZ0k71HGuuk2cm2B5S2xbKX
FDXZG0zZ+mtPjPWBZcF7l5TsbLKXOpSafC/U8sC0l0ota4yb7Zk/iJ7572d+
IGdp/aP05832b2WPmSh6mB74EXpva+u9Fvtr3mVznRyND6Q+Las/qd5mf6BS
jS3FyvCAb4rSJeab7fbB/mvvcqXrHZiqMUVsglCXvepq3vW+kVoH/rXI+19j
6bX/wZbXMMFb7UB4jfFKxpoJ9qeTzgVetlU64CnWzuanMdnetjbWTSdB5sCr
WhuDbxum2T80kXu50UXkQOxDc4VXTXPt+W/uFc8P4jjQksu21sPosP3WCXW7
vph92N/7fJHXdcVvML49jA9V7wBTDzXPAWYe1D4HmH1Q9zjA3AN1rwPMvVD/
OMD8A/WvA8y/0PBwgIUHNLwcYOEFDU8HWHhCw9sBFt7Q+HCAxQc0vhxg8QWN
TwdYfAIAEc7dXg==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.01388888888888889], 
      Thickness[Tiny], Opacity[0.8], CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQHWcRqlmVZX9g0rQ0zRa+CHtpp043zUe2BxJ7A896
yUfYX/fem3wj0uZAzeGuy9xBEfZTQz82tF+0OnCAp2K+yIoI+6B41XlmnpYH
Or60zVqqHGnPnxm5++kB8wM1U48rC5+ItD9T1HtjioXZgSaBaX7fZ0bZd9Yc
/Oq8weSA7YVjQhXzo+3d2r4KfVY3PpDg+F9m2YMYe6YJmgaL5hseUF54W+t7
epz9gZmxvoHiBgfeLPD+ma2YYP/TTfkqg5zugVwzGV5Zx0T7kqhu/nherQMG
tvKnY+cm2b/L/ey594/agdKW5dtmOqbYZzRGt0i/UT7wudomgtU8zf7RlMP7
Km8rHNDX3z0/tjLDfntA+Kf1U6UP7E4PMy94n2W/qlw9PadE9MDVRw80V69I
tLexfb89cBnfgZMdzwU23l9hr9Ldv/BUMtOBnStsvrBK3bM3SNmvw9f6Yv8G
3u5o0cYfML49jA9V7wBTDzXPAWYe1D4HmH1Q9zjA3AN1rwPMvVD/OMD8A/Wv
A8y/0PBwgIUHNLwcYOEFDU8HWHhCw9sBFt7Q+HCAxQc0vhxg8QWNTwdYfELj
2wEW39D04ABLD9D04gBLL9D05ABLT9D05gBLbwBO1igZ
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.01388888888888889], 
      Thickness[Tiny], Opacity[0.8], CapForm["Butt"], LineBox[CompressedData["
1:eJw1k11Ik2EUx5ctsYyVpGu2NT/ezTlcy7VZ6/M8OVCDCbG18mZhiTCGJVsF
uqSLUESkmeF3XSRCwboQIdLE2KmoWYpaUhfVWvCKphI6ssRQVrHzXjw8HDic
j///d7IuVtsqE0QikfHf+/+fNzu0PjfgH1uXpWkXBzv2+mNp+09gUabo/qCc
g+Cm0IeBn8dw46X9+gUTB97Z2KPSoaPo+ti8ecbJQfaY+eZ83RHMnVZWhrs4
mO73lDWcPIymhbDaMMtBfVtAn5Voxj5xkVVSrIKCWl787O1BdNYprasjKph1
Kj6XtRTgp+Xf9WOn1NBZ6BhYsZtwRfL+6bslNZRo/I23ZUa0yCH1xUAOrCWH
nLqwAS1Radv4HQ0ElmPG0d58/JY07GrvyIXBgCd1dFyPkV8dc+nPtSC7ymPM
ocOMUt5cIc0D33HHpUMRLc5ph31T3ToIJ4bSq10arPHzZ5uteoAp8+sHURVu
V67bNWn50Nsd8H71ZaM3ubG8KsUACRWKDKk4E6v6Q7i69QC8KVN03t0jx8Wm
+ZHT7Qa4tRhb2rZPirud67xEaQPbDb7EByk4IZl8eDm9FfKy/ZbpviR0D3W0
NphegaslsFDRuhEsv6I8d0b9HZYfe+4VPuGD9khxVDu2JsTgoJjyQcinekyo
R/3YJPWjeZgwD83LhHlpH+amfWhfJuxLejBBD9KL1ZJepCebIT1JbyboTX6w
L+QH+cUGyS/yk/WQn+Q32ymL+008sAlFnAfihfX8iPNCPLFrNXGeiDfm3RLn
jXhkCcQj8cpyiFfimQk8E+9M4J3ugQn38BftjXCf
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.01388888888888889], 
      Thickness[Tiny], Opacity[0.8], CapForm["Butt"], LineBox[CompressedData["
1:eJw1k38s1GEcxxUyQmmJNCKTjOZcJ8Q93wdHlJgfhdnUoS5WoxQTSrbTUn5k
bX52fmzmxzV1Whur7T5N9MOmbHSjFX1d3CVnO7P5sazans8f3333bM+e5/m8
36+XW0ZuwsXtJiYm4n/f/3964FmvWzkcNIvzDpbH8sRvWuDwMYNAd9PAmDKR
J6Yl1uZOaWK4s9+0QpTJE42zzpidGAJZU98yuVKe9KqHZgdPB0PVxJULFh08
uS1tHbOUnABpbfzSzDhP4kyLX6eGBEHX7utD/jZzxL3zXG+PKBAy46tHapLm
yGqksGHdJwAK+wRfarrnyAedTUW0x3HILoiJWrHUkuZKfX6jsz+kh+Ur6oq0
JNdnWKq3F8ETzy71+TUtCR1riwuyPQal6++rpPd+kr15JeL7O4QwrWwx9nrO
E51divfUlgCWR4yxp6bnyQ2ZTJhg8AVHRZLEp22BHFC62Bq/H4XV1MOd+iId
AcOk/tEnb0gOVonyZXpySVg17AdeoHyqfimX/SLWBZL28eee0NG3Qt4WLJL+
wc2Sa+0eYL9TbxFR/Zuk/OlPsatzhyNnJIXi9iWyRXNEqnI3yCprSA9XGEiU
Zbhrx7wLLGr7T5o7GsjjWpXmxzsnaLGTX30lN+NmHFxr3Hr2wehX+/qHD8I4
79bqSGnlHgiIlrjfXCjjlmI2NkM11uC16FY/2qTi5GmanDeNZlCxmqwVKCa5
oInLL+4OrKklLbusIk4sc5/5iEPbimfVVvwzkW/lBq45XLP9HO5n51E8j91H
8T72HorvYe+l+F42D8V52LwU52V5UMyD5UUxL5YnxTxZ3hTzZn1Q7IP1RbEv
1ifFPlnfFPtmPFDkgfFCkRfGE0WeGG8UeWM8UuSR8UqRV8YzRZ4Z7xR5Zz5Q
9IH5QtEX5hNFn5hvFH1jPlL0kflK0de/EurWkA==
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
      AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQHWcRqlmVZX9gM1dM1sNPC+yfryl80ZZjc6Ah0CDO
VXmhfYFi3/LJeZYHvgTvu/t650L7X1NXpS0oMDtwu8yk+MqJRfYtXMdV1xYZ
H/C4lfGOv2SJPW/94yc7SwwOfJrxZvLGf8vsdZ7/d+99q3XgxkzriytfrLK3
v2BxbNlHlQN7Qj2dQuZssF9c9Lij4bXsAYfJc+/bSW+zP+ES2rr5s+CBEweS
dFOr99hvjZZhn/X++/75O5Plso5/hPHtYXyoegeYeqh5DvZQ86D2OcDsg7rH
4RbUPVD3OnyAuhfqHwd3qH+g/nW4DPUvNDwcvkLDAxpeDvXQ8AIAWTSwgw==

       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.02], 
      AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQHWcRqlmVZX8gVeSamWZ0k71HGuuk2cm2B5S2xbKX
FDXZG0zZ+mtPjPWBZcF7l5TsbLKXOpSafC/U8sC0l0ota4yb7Zk/iJ7572d+
IGdp/aP05832b2WPmSh6mB74EXpva+u9Fvtr3mVznRyND6Q+Las/qd5mf6BS
jS3FyvCAb4rSJeab7fbB/mvvcqXrHZiqMUVsglCXvepq3vW+kVoH/rXI+19j
6bX/wZbXMMFb7UB4jfFKxpoJ9qeTzgVetlU64CnWzuanMdnetjbWTSdB5sCr
WhuDbxum2T80kXu50UXkQOxDc4VXTXPt+W/uFc8P4jjQksu21sPosP3WCXW7
vph92N/7fJHXdcVvML49jA9V7wBTDzXPAWYe1D4HmH1Q9zjA3AN1rwPMvVD/
OMD8A/WvA8y/0PBwgIUHNLwcYOEFDU8HWHhCw9sBFt7Q+HCAxQc0vhxg8QWN
TwdYfAIAEc7dXg==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.02], 
      AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQHWcRqlmVZX9g0rQ0zRa+CHtpp043zUe2BxJ7A896
yUfYX/fem3wj0uZAzeGuy9xBEfZTQz82tF+0OnCAp2K+yIoI+6B41XlmnpYH
Or60zVqqHGnPnxm5++kB8wM1U48rC5+ItD9T1HtjioXZgSaBaX7fZ0bZd9Yc
/Oq8weSA7YVjQhXzo+3d2r4KfVY3PpDg+F9m2YMYe6YJmgaL5hseUF54W+t7
epz9gZmxvoHiBgfeLPD+ma2YYP/TTfkqg5zugVwzGV5Zx0T7kqhu/nherQMG
tvKnY+cm2b/L/ey594/agdKW5dtmOqbYZzRGt0i/UT7wudomgtU8zf7RlMP7
Km8rHNDX3z0/tjLDfntA+Kf1U6UP7E4PMy94n2W/qlw9PadE9MDVRw80V69I
tLexfb89cBnfgZMdzwU23l9hr9Ldv/BUMtOBnStsvrBK3bM3SNmvw9f6Yv8G
3u5o0cYfML49jA9V7wBTDzXPAWYe1D4HmH1Q9zjA3AN1rwPMvVD/OMD8A/Wv
A8y/0PBwgIUHNLwcYOEFDU8HWHhCw9sBFt7Q+HCAxQc0vhxg8QWNTwdYfELj
2wEW39D04ABLD9D04gBLL9D05ABLT9D05gBLbwBO1igZ
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.02], 
      AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJw1k11Ik2EUx5ctsYyVpGu2NT/ezTlcy7VZ6/M8OVCDCbG18mZhiTCGJVsF
uqSLUESkmeF3XSRCwboQIdLE2KmoWYpaUhfVWvCKphI6ssRQVrHzXjw8HDic
j///d7IuVtsqE0QikfHf+/+fNzu0PjfgH1uXpWkXBzv2+mNp+09gUabo/qCc
g+Cm0IeBn8dw46X9+gUTB97Z2KPSoaPo+ti8ecbJQfaY+eZ83RHMnVZWhrs4
mO73lDWcPIymhbDaMMtBfVtAn5Voxj5xkVVSrIKCWl787O1BdNYprasjKph1
Kj6XtRTgp+Xf9WOn1NBZ6BhYsZtwRfL+6bslNZRo/I23ZUa0yCH1xUAOrCWH
nLqwAS1Radv4HQ0ElmPG0d58/JY07GrvyIXBgCd1dFyPkV8dc+nPtSC7ymPM
ocOMUt5cIc0D33HHpUMRLc5ph31T3ToIJ4bSq10arPHzZ5uteoAp8+sHURVu
V67bNWn50Nsd8H71ZaM3ubG8KsUACRWKDKk4E6v6Q7i69QC8KVN03t0jx8Wm
+ZHT7Qa4tRhb2rZPirud67xEaQPbDb7EByk4IZl8eDm9FfKy/ZbpviR0D3W0
NphegaslsFDRuhEsv6I8d0b9HZYfe+4VPuGD9khxVDu2JsTgoJjyQcinekyo
R/3YJPWjeZgwD83LhHlpH+amfWhfJuxLejBBD9KL1ZJepCebIT1JbyboTX6w
L+QH+cUGyS/yk/WQn+Q32ymL+008sAlFnAfihfX8iPNCPLFrNXGeiDfm3RLn
jXhkCcQj8cpyiFfimQk8E+9M4J3ugQn38BftjXCf
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.02], 
      AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJw1k38s1GEcxxUyQmmJNCKTjOZcJ8Q93wdHlJgfhdnUoS5WoxQTSrbTUn5k
bX52fmzmxzV1Whur7T5N9MOmbHSjFX1d3CVnO7P5sazans8f3333bM+e5/m8
36+XW0ZuwsXtJiYm4n/f/3964FmvWzkcNIvzDpbH8sRvWuDwMYNAd9PAmDKR
J6Yl1uZOaWK4s9+0QpTJE42zzpidGAJZU98yuVKe9KqHZgdPB0PVxJULFh08
uS1tHbOUnABpbfzSzDhP4kyLX6eGBEHX7utD/jZzxL3zXG+PKBAy46tHapLm
yGqksGHdJwAK+wRfarrnyAedTUW0x3HILoiJWrHUkuZKfX6jsz+kh+Ur6oq0
JNdnWKq3F8ETzy71+TUtCR1riwuyPQal6++rpPd+kr15JeL7O4QwrWwx9nrO
E51divfUlgCWR4yxp6bnyQ2ZTJhg8AVHRZLEp22BHFC62Bq/H4XV1MOd+iId
AcOk/tEnb0gOVonyZXpySVg17AdeoHyqfimX/SLWBZL28eee0NG3Qt4WLJL+
wc2Sa+0eYL9TbxFR/Zuk/OlPsatzhyNnJIXi9iWyRXNEqnI3yCprSA9XGEiU
Zbhrx7wLLGr7T5o7GsjjWpXmxzsnaLGTX30lN+NmHFxr3Hr2wehX+/qHD8I4
79bqSGnlHgiIlrjfXCjjlmI2NkM11uC16FY/2qTi5GmanDeNZlCxmqwVKCa5
oInLL+4OrKklLbusIk4sc5/5iEPbimfVVvwzkW/lBq45XLP9HO5n51E8j91H
8T72HorvYe+l+F42D8V52LwU52V5UMyD5UUxL5YnxTxZ3hTzZn1Q7IP1RbEv
1ifFPlnfFPtmPFDkgfFCkRfGE0WeGG8UeWM8UuSR8UqRV8YzRZ4Z7xR5Zz5Q
9IH5QtEX5hNFn5hvFH1jPlL0kflK0de/EurWkA==
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.455091475925076*^-68},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       TagBox[
        GridBox[{{
           TemplateBox[{
             StyleBox[
             "\"Analyt.\"", {FontSize -> 14, FontColor -> GrayLevel[0.2]}, 
              StripOnInput -> False]}, "LineLegend", 
            DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
           StyleBox[
           "\"\[CapitalDelta]t = 1/10\"", {
            FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
            False]}, {
           TemplateBox[{
             StyleBox[
             "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(smpl\\)]\\)\[Element][-1,1]\
\"", {FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*SubscriptBox[\\(t\\), \
\\(smpl\\)]\\)\[Element][-1.5,1.5]\"", {
              FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
              False], 
             StyleBox[
             "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(smpl\\)]\\)\[Element][-2,2]\
\"", {FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*SubscriptBox[\\(t\\), \
\\(smpl\\)]\\)\[Element][-2.5,2.5]\"", {
              FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
              False], 
             StyleBox[
             "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(smpl\\)]\\)\[Element][-3,3]\
\"", {FontSize -> 14, FontColor -> GrayLevel[0.2]}, StripOnInput -> False]}, 
            "PointLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}]}], 
               "]"}]& ), Editable -> True]}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
       TraditionalForm]], {25, 1.8}, {Right, Top}]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{
    FormBox[
     StyleBox[
     "\"Frequency \[Nu] [Hz]\"", FontSize -> 16, StripOnInput -> False], 
     TraditionalForm], 
    FormBox[
     StyleBox[
     "\"Absolute magnitude \
|\[ScriptCapitalF]{exp(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(2\\)]\\))}|\"", 
      FontSize -> 16, StripOnInput -> False], TraditionalForm]},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-25, 25}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<DT_Comparison.pdf\>\""}], "}"}], "]"}], ",", "g1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<TSampling_Comparison.pdf\>\""}], "}"}], "]"}], ",", "g2"}], 
  "]"}]}], "Input"],

Cell[BoxData["\<\"C:\\\\Users\\\\Jelle\\\\Desktop\\\\coding\\\\\
ComputationalPhotonics\\\\Excercise_01\\\\A2\\\\data\\\\DT_Comparison.pdf\"\>\
"], "Output"],

Cell[BoxData["\<\"C:\\\\Users\\\\Jelle\\\\Desktop\\\\coding\\\\\
ComputationalPhotonics\\\\Excercise_01\\\\A2\\\\data\\\\TSampling_Comparison.\
pdf\"\>"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ContourSampling", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fexcpError", "[", 
   RowBox[{"tMax_", ",", "dt_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tSamples", ",", "n", ",", "wSamples", ",", "fSamples", ",", 
      "fAnaSamples"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tSamples", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "t", "]"}], "//", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"-", "tMax"}], ",", "tMax", ",", "dt"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "tSamples", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wSamples", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "n"}], "/", "2"}], ",", 
            RowBox[{
             RowBox[{"n", "/", "2"}], "-", "dt"}], ",", "1"}], "]"}], "/", 
          "n"}], "/", "dt"}], "*", "2", "Pi"}], "//", "N"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fSamples", "=", 
      RowBox[{"Abs", "/@", 
       RowBox[{"Fourier", "[", 
        RowBox[{"tSamples", "*", "dt", "*", 
         RowBox[{"Sqrt", "[", "n", "]"}], "*", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"m", "-", "1"}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "1", ",", 
             RowBox[{"Length", "[", "tSamples", "]"}]}], "}"}]}], "]"}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"fAnaSamples", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"F", "[", "w", "]"}], "//", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"w", ",", "wSamples"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"fAnaSamples", "-", "fSamples"}], "]"}], "^", "2"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g3", "=", 
  RowBox[{"ListDensityPlot", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"tm", ",", "dtm", ",", 
           RowBox[{"Sqrt", "@", 
            RowBox[{"fexcpError", "[", 
             RowBox[{"tm", ",", "dtm"}], "]"}]}]}], "}"}], "//", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"tm", ",", 
          RowBox[{"1", "/", "2"}], ",", "4", ",", 
          RowBox[{"1", "/", "20"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dtm", ",", 
          RowBox[{"1", "/", "20"}], ",", "1", ",", 
          RowBox[{"1", "/", "40"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<BlueGreenYellow\>\""}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"Thread", "[", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Samling interval \!\(\*SubscriptBox[\(t\), \(sample\)]\) \
\[Element] [-t, t]  /  s\>\"", ",", 
          "\"\<Sampling distance \[CapitalDelta]t  /  s\>\""}], "}"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Root-scaled diff. between anal. result and fft\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
fV286TWfvOaiFWtxuH285rNacGuDaabbem3WilNXgp57w28N1oq7asfd189r
nioJpzWcN8Gl34Y75Kl61LzOnW0514Pfxpvos5q8p95uoYtFXvPZu16byQ5g
A8Hln3dcTEL/Da/5pzffqm9pB6c9b/ca7zMAnQbUlEajHn3XR/dd7m0IfxB7
rfKHfDLZxRT2HTm/RX4Q545otUe3A3oN6eF/PvfPIC4u+MwTjdDY787vufjE
xTSv+WQqob38ohnRP6sMYa9VHpLPVDPdxVAw5UZ4baaHu9gOZyoaqtf9r8Af
Sv0Mr3lB3hpGbVd6mEa+O5yZ7GdQP8yb6OHh3N0D3iyveaI5fb3G7zQajvLy
yUiv+eZVsNngLciNAusFPof9bHS6c98I+DEfjoq7ryVn7cfQS290pDfXxTyv
zZbyMc+14jyWb23G9/aOq+vN2od3m85bvec1b80j+sKRT8a7mOA1j8hn47zm
s77UzXexwGt+GgdfXM3XJheb4c+H82Zc3XjuEF9e64/WRK/5YALn/tQecvGp
1/z3BpyJxNtg73DvJLjvw+/PHfLcDhdfudhJThz5YJvXZlFzOAh8sYutXvPP
FrBB8MfxJmPJifMuv8VYcoPQeIueNsPZTI32S8iLN5i9sCn0pH7kmQ9cLHXx
sdfmfTvYEOqWcB5M7Vbqp9DbVt57Am83BL2h9HPZxRUXH7pY5rU52sE7zeA8
lPx0csKHw1/OOhzuSq/N8khqhnLfdPr/GO2Z6KzwmjeWUzMCbBcccXe72OM1
T63gjpHcuZyaWfBmc784H1E3B/wTr82h5l2e2OtiH/s5nFd5zYeqHcN+FbxP
qNV5Nfm91O7h3o+omUvNPLhjvYleXeO1OdpPP9JdC6bcfHDlx4Ov5Rtn8jZj
0Y3xxT0AZxdvoZp1aCh30Gvekm/knw1gC8EPsT9ITpz1Xpud9Zyvem2mvnTx
o4ufvOa5Cdy1Hg1pLUJnI3fKo5q3zdQdpvZT9u+T0zxuAVsM/iX3bgFT7gjc
L8E1Y5qvHXCUlz9OeG0Wj3vNK8KOEsfAtqF/le+YwLtdc3Hda76bzzsugH8N
fBt119Bcwt3SXor+dXrbTn83vPbn0TJ6O0GcBNsB/wYax+EtRfc4uY/R/t1F
Bvd3dUaf6X7tNe8IU+43r3nllNc8dJr1FNxd3kSvfePiptc8FOPuhqOc5lpz
f8vFr+QfkduFnuq/9ZovPvOaL1aC7QU/TU74Ga/56nO4n3PejdYe7tWd33lt
9ldRp/Ntr/noBxd3vDbD8sZZF+dcfO81j9wGW4PGbXDVnveaZ86RP8f5DDWr
6eE7+AfQ/YH9fs4HwA6i+YXXZkrrevbyziF6vcP+IN+3l3dax/3nqVP9Bd7n
M95oPZh8dpFVZ/nimde8kczNwF2veU6cS17zpLz4D9wr7FVzz8V9r82ZalR7
mJrYPeL9i77yR+AIuwp+hNzP7LXKH/LJf17P//8fWl6DHzt7fTbPx+DeI45S
rxmWR06h44H/EEw5acgbwuWTB17zlg9c+UP8Bvqz5xfy4iX12Xvpu7+ixu8z
nftw7qN7DM6NOF7AZ/N/ip7kC2HyRgwXptkPggfwrJ/ak/TzC/EQ7KQ38e/b
m9SHXKR0kcpnfQkXpvn5jRn5DCwM/jk5/bkgTDMnPMJe2HM+m+UEn2l+w32/
UivNx17zhnTkiVtoRH1Wd5u7fof3h9c8dRZ+FM53cXXn4P3J3epBnL+85gPh
fzODT7zmifPkFf8Dk/9Uq+9I4uJ5n/lM+QtxnCTg59A+Dx6ru0DNE2ZDMyOt
ki5KMSsXyF9kppIyP+rzqdf8Jm5y+I/5xrNoqeYOvIvUneXNxJXXcjheTp95
VHthmv3cLvL4zBvST8E9Ost7uXzmLfkyN3thmuPUPpsvcVV3j7t0j/gpwZTz
UBu7Ly9e1czdg+sh50VfM6k78vnMH6pJw52pOfvgp/Ileusz/PErnlB9fmZd
M1iQcwH85uccQD+tzzyj78jFtwh7hJeS8UZ6n0fk0lGj3tKg6ePugtyr+9Lj
AfF/o0dhhVwUxmMhzmH4GeCG0CqEVpCeH6EnrSI+80JhIoLOcBfDXCzDJ8LF
/YMZyQQurKiLrC5e8NnsKpcZblE4r8Ir5jOfFXdRAp9kYkYzolkUjjTlsSw+
84Y88pLP/J2Rmv/hQ3HlJ92bhfv/ZO6TUFecHp9Qp7mu67PfTX4pze+kfDaf
+eJF1mz0m5Sek6CnfRsXbdHIzPdUhSvfJmNNiob01Yc0n3oT78lJP/WI+syT
+or5LAXnMvDrwXmJ99H7Sis72m3hl+I9svCmxeDrnRv4zGe6T76Qt8q6aOii
kc98I/+Uc/GyzzzXEFw+aMJ8VfDZXKWlvhx6edBvwL4B9eXQTcU9+eI0G6Mr
LfmjPFEBLD/8xtwpvCLnfOipvim96feoxu+j2ansogqrzvKMfPKKi2b0n5J3
ruQzX1WElx4sBfmUvF1ufgvpFEQrHXXp6aUg/bzCXlhzn3mkMH1mojf5QL5p
QY9VyBWix8Lki6BRie/JQL45nPK84ctotfTZ76++Orno7LO50PtUd/Gaz+ap
JVjMTy3BVVvDZ56rTr46Z810LZ/N4CAXb/FbFOVu1RZH5zV0avrMDzWpfwGO
8q185i/5pzX5mtzxAnfWICeO/FWb+2uBqV7zP8Bns6ffaoKL133mD3mon4v+
1NbxmX/qgtcjN4DattTKV+PRakvNi2jEaurDLeNL9O0bPpuvgfQj3XZgyjUE
V74ceDvepBXfWAbdGH8g792KtyhBTXs0GpLXb6E56OCzuejI2oHfqjEczY/+
/NffA/LRYBdD0HsZzSbwBxON0XgZnjQrxN3TBI2maMsDQ302h5pBzW8X1s7k
XoHfjP0wtDqhPQReU7CK4NLp6jM/jHIx2mfzWwW8m4uRPvPPCLDYnweV43oZ
AUde0r/31r/n0r+LroJGVXobDmc4Ndp3Jy9eNfbCWtCT+pFverjo6WKMz2Z+
NFh16rpzrkbtSOpb0JvOqXn3NNS/FqcvbXmkl4vePvPPWBfjfDYrNePyrcgJ
rwW/D2stuPLEAp/N9xoXa9Fqxb1jOLdBp6/PPCGdOuyFjYcj7noXE33mJeXe
hFuLutrcp3sXwhP/dXBh8pFmfLHP5vB9n/liETEQzhvUvs1eaztq36f+HbC3
0V5E7URqXoc/kJr28FU3yWez3x6tJfTTgdy7YIPjcGEdeQ+9S9s4Lel8AF91
63gvvcFk6lQ/BN5Sn/lnqs9meAjYUNYP2YszBd4UzvLQSp/N1Aqf/fPfMGom
w+vEeRg607hHOl3ZCxtO/XLO08kPBxsB1g18BfeOAFNuBtwV4JoxzddYOMrL
H3N8Nr+zfeYVYTOJWWCj0F/JN3Tkmz5yscpnvhnCO38A/yPwUdR9hGZ37pZ2
T/RX0dto+lvtM3/0prc5xFywsfBXozEbXk90Z5Mbg/ZY9OSXPujMc/EZvZ32
2X9D6wv+hc/+O9t6+PPIfeqzmdVMa9Y0TxPQi3n9TbjSWwtvHNzxYMrNhytf
HvSZVxSH0Jd/NrjY6OIw934KplzMh8q/Q78b6HkhmoeIT9FcjNYRn82zfqtj
nI/6zCOLOWu/ycVmn3lpE/dsBHsXXO9eg7d/l9wWcu9Qt5j+D3PfB9y31Wdz
JP4U9sKOuzjhM68s5fwhuW1wl6J1HK0P6Pld9P7fc1777zP6e2c976N3m4rO
dp955JTPfKL9Sc4f+8x74kxn/zGcZfB2udjts5lTbgfcqdRNQ+s0+srPgCNs
JfgMcjvZa5VX5BnN6OfsV8adz/hstmfB3UXMpH6bL/HPp4+oEX+fz+Z5Lhqr
weWZPT7z2VnwM/wOy3j/veT38P3LyK+h5hw6u+Hs5jwLzuo43nmfeWEePX0C
ti4OFyavfAF+Hp1zcObSz15iH5j+/cdV/l3KOur1+08JuD+/XEwOmC/uuPjR
Z17RXpj+G/tFn/npAvsN5MT9lPUn9j+7uOezGZTG837L67/LH/CZzzeic4m6
w9TKZ3fRuAhPd8lD8s1lOIfh3WX/E7krcI+goR62gH/psxm85uI6uDB56Crr
l/R+jFp56b6LBz6bnxj3OJz7aG/h3vvg9+Bdo071vzAbD302K7+Q3w7nF3Bx
bvjMP+rzFDWP+MZNvNtxdE+gcZ2ajeQ3UXuS+h3kpa3Z/83F7z7zxlcuvmbd
CfdXn3nrNNzPwDTH3/psvnZSt4u7HsH/Buxr7vos7r7HPvPRbjjfwPkdXPo3
ueMPn/lDNbe481vOZ+Hf9CV6S7P6t89m5xz1f/ps3vV/L3KB818+8845zufR
/85nnnnEt54G+wT8Bm+0A0y52+T2onGO3v7gzi+473ufeUD8A+yFZfNbz+pd
PpFfkvot9wPcF/zGe4LWF/T8CXr7ecebvIPqk/nNFxG/9RX221zorqcukvvN
P8m4/xLvlgxctf/5bI7/9ZmfVJMCHWloHv9hfQrnLjzhz3zmD61fsld9Sr95
5Eqcxpfw/mX/L3en8puvUlKnvWrT+22m9Ds9gJfab566Su86p/Gbtx5w/oWc
B65WeecanPtoqU6+Ef86PC9crZoFH6vOmpm0bk3ntxmJ5RV+MHEexvH0Depf
+Zj/fuaN7sFPB+dreAEXGfj29NQJ0+/fwa2TXLzrt1kQFvRbhMDkM9VKI6OL
TH7zk/Lf+hI5GcHljyx+m7vf4+q+pUZzldlv8y4t8XXOAifM/P2JJ5TTTEb9
5h/xsqIf5DsC9CW+ehDvFrP8I/Ot+ZTGbfIl3b4Uc/8c/klwa00XtfDPbTDl
/oev5Cnxk/jNb4rvwW5zRwI9qkZ9Su9FNNVLCb/dn5Q1GbkX8ZbWp3ivtN/8
UYpIDv8F9HXP82gmpU712f02N5qfNODZ8ZnmRbpliLJ4JQVn7XO4yOk3j2n9
F7+V89u8lwVTLheznsdFXjTegPMMv+aAL27Ma9J62UVuaj3UpKKH1OTTsJZn
nxuNXNR5qa3AN5cHUy/yk+ajAHOdDo64fvL5wIVV5JyffDqw9KyV2JdHJw18
H/fl576Y9/Jzd0HuL4BGBnTkjcouqvjNH0G4ikJgHr43N9wMaGRkX5m3SsWb
Squq3zyRkbP2RVwU9duMymeF/eYRcTPDkb+quagOPwJP8yZvZIOTGV419lXR
jVCn+hp+m88E7i1GbXXwmujWgKO8fPQSq85J4rDeLvr4zU81qJWO5la+KA2v
OHWaw9f9Nouqqe03b7Rx0dZvfpJvWvvNh2HevDDnNnAKkQuhkR2dktS2oa/a
3JOdfR32WnPQT2l6quuint/8o/7a+W32c8KtS+Sg/nVq2xKl6U35f/C29HKh
UZP3Uj8N/DY79f3mo/Z++7M/F1hu8HLkxG/oN2/lIS9Ms6xZb0xtPerbUVsW
HWnLH3nRacS+EfXKd4QjT3Vy0RndfPAaUpMHTgV44jShl4rUyQua8W5+m8Ou
fvNEF6IynALUNmWvtSC1Xal/Bawp2l2obUJNfviVqSkEX3XN/DY7hdDqTj+F
yTUHqxaHCyvCe1TgTWJa0ukBvzvfXwHuq9Spvjq8nn7zTEu/+aA6WA3WXuzF
aQGvBWf5c7yLCX6bL81OTWpehVeUc010XuMe6RRnL2yui3l+84TOrcjLJ+O4
pzX7NsR47lVNX7/5Zx57YZpLzVg7sDpwNH/9XQwAe9NvvunH+ibf9Dr6RXk3
fZN8N9HF27xVNd7xDfgTidfRqMPd0qwXd88baKi3SfT6Dr2pL3lnIOsAcu3h
94dXD63+7N+GJ875BPe/112cSzDvtOceaQ7ym1e0xnzTiPNbfuPrn+80M1P8
NkOT4SjfmHMnONP8NtddyC92sQSNyXA6ozXVb76QxmDwqdQOBpeGvDTExVDW
ptR15l5pTefeaeTFlQ+6kZvhtxme5WK2i2EuhvvNJ8rN9JtHmlE3jNoZ4M3h
j2BtDncY/KHwu3LfLGZhJtEDnZ7slR/ptzmSZgv2I+lvjt+80pNzL95mGu/T
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
7UPcr1r5Ur6rEjIfaa3KvgA1QerC1FYLmZ+qgqkXeUfzXYz5zQJH3Cj5IuDC
qnMuSj4LWFbWGuyropMJfoT7inJfzJ9Fufsl7i+GxgvoaFZquqgVMq88B1dR
HEx/xlTmPWpSW4PaF8AywqmCVu2QeS4bZ+1LuigVMg/IWyVC5hdxs8ORd+q4
qAs/KTzNrGauPpzs8Oqwr41uUupUXy9k85mce0tTWxe8Ppr14CgvH5Vh1Tll
HJabmgbU5EJH81chZHMlXlnqGodsFjWHqcDLuWgUMg81BEsF/3nevAQ5cfKA
Pc9vkQqN1PTTAE4DarR/mbx4adgLy0dP+em5PH03DdlMNwFLS93LnNNQ24j6
fPTWiHdNzttX5A0q8F16izdcdHZRibzukvcKcmdT9sNcNCOnmdVMv8pZuHym
2erqolvIZq0rmM7dQ+YJcQvDF1YNvDC55nE1Mbw591WH34O7i5CrDtYzZLPz
pot+cFrQb3Xy8kUx8JYueofMH73AisHvBV6Dul7sa1HTB640XgKvSa442GtE
K7Ba1NUGKwEurC94CXKtweqA9+Dbu/N9dciXgCtPtWFtzTvUgfuti1su9oLr
beSPtiHzUCmw/uClyb0OVh98AHthb4VsvgZxb9tQoodVF5utMpy1bxeyuWuA
jvQGotGQfLlQog91bo9u7PsaxNU1YFWt5ld/d1RErxF4Z7BOIfOKPNOB6AjW
GL6+abCLISHzmvIV4jiDwcvR18vgsboK1OiuoSHzjrS60F9nOJ1CiV4T7xXW
YeyXuRjOuQP3tEerKT1MRVea8sp0FzNC5rnpYMPQacbaPJToMZ1HwFOd5mpW
yOZsZsjmenTI5ndkyLw0glwP+M3BlOtJ/eyQ+ehV6nqC9eI8inxPdGaBtQSf
EzIP9QIbRR9zwZXfTd0uF2PoUZw+cOaCjw2Zl+a5eC9kfmkFfwz8eeB9qNN5
fsh88x4aral7D7wv2LiQzeR4Vp37wZFG27h8P7AFnCeQ7wfWn3eaw7cLWwgu
7uuhRE/qPNHFopB5YSExAP5Acu+7eCdksyMvvR0yH06EMyCOtzhkvmkH523i
HbCB8AahJ3ySi3ddTA7Z3EvjrTiO8prfJeCL4XcgNxhc+Q9cLA3ZjA+OwzrC
f5c3H8s7DyYvvuZ9R8jmWBpDweWzKSHzyIfgyk8FmwKmnLwyLWSemso7T+Qt
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
onWC/Q144qyI01CcBksbdf887aJC1Dwj/DMX30ZsVm6Cxfz0XcRmdh85cXZT
86uL3+DqLJ/JA2cjNo/y7DfwPycvnjxyC03xz1DzDXeIf5t7v4O/hx73st6i
TvXy2X5qvo/Y3N5x8SP7g5yV+yFivtjPWftzLs5HzD/n6P0s2DrwcNTuDUUN
U+4Lcmuo20/Pt7nvIPddiNjsiL+B/QX6+yli/jjE+VNyF+Gu4t0+R+sgPa9D
bz1v8R3v+TnvsgqNmF/lB/nqrot/XDyLmPfkoX9d/EfuZ7gPIjZb9yM2V173
3b6oeVUevkxof4l7LnFO4Xj30FJof5T1GHvpySeeqIX218jfi7v3Otwv6fMq
nPv0F+J30dxofuSlQNT2WoMufomYh07w3od5Z+nrm76Cq1p/1N7hMNyNvOMl
NKT1kDo/tQ/ATxDHwR5FzCOn6U293AT7DFxYCFz8U+ifZv+IntTbV/TwkNxV
frdr6P3G76/e9GZ5ozYbeh/N7xnyvzMzwiJROz9mboQL+441yv45tyaJ2gzm
cGvOqM3Q72jq7rPo/BGxOvlAtfJZQtQ0HsPTXfKQfPMnnNvwEqiVhnJ/wf2e
PtTDF+D/47f528VTcGHy0BNWndW7PKla+ex5d04atd82xhV+h9xfaJ3nfAeN
J9ylOtUni9qcJGdudP6bni5yvsssyXeX6VO+uEvdn7zDH/SQFM1LcC/zZn/A
uwL2D/Xym/RyuzUPfvqPs4d8SjyZJmrzo3kVJh8JLwMnBZj2qaLmuVzo/cc+
N7Pl5b7UUZv3VHhNe2H5XOTHJz7Ofvhpoole0j4tWl56vo/eA+Y5b5xeAB3N
XAbmNwheIGr+km/S4X9hBVkDaCiXHm4vt9Z0UQNeITwpjnTS8mZpOQfhiVM4
aj5STUZ6yYCvwuQf45OM4MKKUBNGJz3fE/s7VecMvLve4xr1mdBTfVH8WRTP
aK8ZycxMFQNXPgtYZnwovBh7rS/hhxIuSkaNV406aWYC0zkr/niOuiTUySfF
yekuceW9F6Lmm+JwklBXnH028i/Qw/PoCX8xan4qHbUZTQH2NM7zOmenVr3L
c+LLG6XgKi+/lAKP+VT3ZqOuFHgOuNm5Lzl6b7goSx91XdSL2p+D8kN9Fw3I
iZOSc8OozbXeQe+mb3yGd3VPLmpz867/48+13NTnQS8Vmo1dNInaDL8cNS+V
I18umug7+aUR+0bUaaY00xWj5rnUaDSEn4dzefL5qNNdTaPmnybk08JpAp4f
Xenrny0LUvMKeCXuj/mwKRoVqNF8ac4026ppFjV/aM5fjdoMN4+ad5oRheFk
QL8y35qXb8oAlpH3KcsbVQGrTF2GuN5eibu3OXeLX5UetWZm3zJq3mlBFKPP
zPCqUd8CvAg9N6c+I9rVo+YV8V9CpyW96e06g78WNc/ozynNUVawVuCa19ou
6pAXrya1LeG2jpq3WnFvDXSy0kN1ciXQLElNGxe10H8RXFgpsOzgwtqCvx41
37SlH/WSDZ1snF+Mw7LTew5+p3Yu2rvo56J/1PwmTflQPssJty53lObet6kV
L8K7689G+WmAi4HUl0avLjq6uz6cBoS4mqW3ojZbg+hNfckrHVjbk2sEvx28
svTRjv1AeOLof1fq32Hp34GV5M311o3ReYvfXjPQyUXHqPmlPJzBUfPf0Kj5
aQj5jvCHR23WmpFrCn8w5ybwO3HHK2gN494uUZvBV6iN5YajqXzMQ5U5d2Wv
VbM9gh6GozOM2sZ8n3rpBlc1mtHRLsaAd4+al0a6GBU1L1WF343378ibvAqv
BefY7yONatS9Sj8j2I+gphq8Huy1VqeflvTUM2r/rFCD/sZGzSs14PYkqlM/
mtpRREt6e4161dZEs3fU/r2//luC/ltcn6h5Qrg8Nc7FePi9yQlvTU78vlHz
Ym3ywha4WBg1/6h+rYt19N6aHtqQk4fqoPMme611yU+Ao3mWbyZGzZt14fWl
RvfXA+8H723qNP+LXLzPb68ZWMJ5cdS8MZDzIOreiZp/tLZnv4TaxWDKTXKx
kb3qBnDXQHhvodkebmx2tL5LP9L9gPNk8oPBhoDFvDiBd2gLvwO64i6FPxHO
BOpUP8XFh1Hzk3jTojb78s8w8A/Za13mYiq8LkRnsJUuPorafIm3PGpemwpn
CjrLwLuiM529VvloRdS8oPoZYMqNBFe+O/gM8JXcq/NM8iPhKnfRxQYXF8j3
gKP5neNiLtisqPlmNussvmk0+p34Dn2PfLPKxWrebijvPAb+KmI0Gj24W5q9
4u4Zg4Z8IE/IQ2voTX3JO/NY55IbB38OvF5ozWG/Gt5Y3nEEbz6eWt3zmYvP
6e29aKJv3uQ8H748OoH30wyth6N8P84T4cgrh6M2433jel8HT5y34UvvoItD
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
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1: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
iuU5yJb+k7GL3P/3h1zOOceVYixbKpDPl4NBnpMrbTTYCNkjYj20qwSbM/RT
vCvZsHe7JJBC8tL2tJCyO3sLofyAbXr0LwEhX8q063mS85UMP1YLlaDQNTY5
OptN+oKQ9Yg5G/2XmWPeCqWY8zUNXqXLQeX0KntJUqdhwX5BlgwaFPxt9q04
xILJ8wM7/gtiI1NMp8I9oxS+3Vsm/a9yMMYWFjhH8p4s6/gjM/88pMz2RqiY
Esj7vTBWdo2NknsHpHvHShHnedCpL5mDgg6ZFm5Sp5vV9ySdjSwA95Qx81Mz
2Qd2WXT88WAj6+r35Fd6NFydKDmY0U/Hi8ywJoYRG55vIuooTApWyCQ6Lrfp
wnOOg/chsrdmvRr6ZlZQjnsHMv5u4yG54sXoW1eSzx+4eqy4VVAC/uX1L9Yv
48DBtlJM2pAN/sUTu7pM8zD/y31Hph4Bp3hXf0lSp2/XiBgfl6NBNC/KtsGV
jvyZKsnj2mzwmO9LvK9BxToR2Rvbi7vxVumO9rVxApI55saOARSMq+rbqVV0
IP1UUof0K9Jvqn7G37pXhNtC4o765P2+4fGnZ5M67TNSSxa9m4cVqzzfHztK
QDd2c7ckeT/fpH5xWd+kIbvnx4D7IAMecpOrjtqz8fHY9Imid1SweO3CZOJ6
kRxvvDV0DRs9px9rbW6gIKS7pVtwdRekNKMu76gkEOl/TH7jYA7Ss3otz/i1
IXHlqOtLXwKHhPf6TbRT8OrF3kyu1U1IX6n/p+kNC90NpQm+BTTc8rtqNWtW
DYWOBA9pQyYYlGa2iEEuepwqW3tcK3F9TC+fYDNgoO70x7wyF97uydYLT8ux
/flKgVU3GTgzzvPPdlE+1P999HPeV4K/lcMrvyTRMTC6+3lQSD6KMsKjqr4W
gG/j68OK2nSYe8octCZ524q1JbCa5O03aTfYz0jeNm7dOtkq34n6ea+7tf+N
gG/Ne+sva5jw/XApWp/ehp5d/WMfp4fRyFx4PtLAxBbLYOVNky0Iy3HMcd8/
jIacXp8qUtdpL/5JlSiV4mXa5oSP+zg4Hq/LM6TDRq5wbiqH5C7PKm21OJK7
vig9NusluevXq9pmwWsleOLnbaE8xobLi7Vlq0xIXTu6aiz3LUG8rYhX3iAb
hdo1x9PIz60+GuW9XVQKf7OXIg4KHMj6ju0qJnvWHT9XDiu1FGHiXo2UKxw8
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
XBX3lwd1eO7Qd2bVNBPqtSmX49bnwnnF9O/5b5Uor1hDOT3PQELUPnv59DwY
X7n+xDKqFGHriuJNCTp6PfadnSV7hKyBzP5ihSbUJW+b+JLFQvvfxrJCxVy0
xQqPFxRWwvXyjNWiaQYeDmRHfGaSvn311jPtghKEPQyYNM2h4+S59RrxR3Ix
WfZywUunEjzKt6c+dTPgfmOINSJOfu/+S53Kl8twQNFNJd+AgYxjcvIyt/Ng
sU6owvhLKXjtDp6XmaFju3OjdbdKPs7I3f0ao1qMA/a/bNYE0GGVVhQaz85H
VJ+0oadJHqjmarzOP/ugpKb6IsK7AFpV5rSVOhSoX7KPt4jqw2g2Z0cYLwVb
N1AyvP+0wZJlFIEbBN7e7iqba6OAq8B5xlG0CXcsL1aFkH4YHaP8b1sxDee3
NVhaG1ZD4eNclsx+JpJf2XToO5E6Lak0M/L7jPvWnyQzVjEg+EfT5r+n+RCp
m221IXnz2kMZtx6yJ/6OvEy3sC9AqFy4ygvSd9/piadxkvqwbP/IknSrAjym
8J/VFqBCT7bRJSy1D9L77/tcMMpHu0ORt2JMEf4Kt4mEnCf5QflXlpdNLnbw
pP2Mkq2EzsMj8t9bGfjqFLJu4kYhVsc1ztYGvkV8/JPE7xW94C+p4tFQzcPr
NxcT3eXKkFskvi11JwPj7webfJ9Q4LBun9psVxNcK+52hLSzwJk3ns4gc7qD
oS4ruqoSchEJ7uubGKgE7b+hNAoMfu3nyyhvwhpJ//nQZhYoH63Gtm6nwnNx
bqgByW9cXYPPm0h+45ma2bvJgArdbzZ/Y0IbcLh67kqgDQtS090nfvBSkRJr
RZxybITwQkSOZDgLtkJC0+YtFMRbZXR1rm/C1OtxnsvvWEhuO3JjkToNW2fb
uOwUaxGnh+XlL5lIUxi6sOkWDYUOA5J2a2og+jk+9tMF0leF0yZPtVFx59mN
Y9GRdaCW/LWTmWTinPvBOztraVivP9Egv74aN6U+JvNpMeGUoNKZO0sjOXnr
ojU3qiAeLnXPXpKJzqLr6j8aaYiZSm0zWlGN8Vih2UgNJv4aZPLN6ZHc8j+K
rjscy+8PS6UoimSnoSUjI0rKLX1TiVAhTS0tipIoqRCSvbKyN9kZ77K3KBW9
w96jJVESv/P793M913nOc849ry69mmG/DebrYVh59z1iOiH2Lnygk+Dv09Sl
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
nqunHi6KYeK7rtLf0Gt07I4Vlcrty4J9bJqM52cWgtVtXO7VUnDUbejkH4Fy
zF3Nvm5Zw4HI1F2laDoV0tcu3B88TIWl+uO3jYIcVKzfddssmo57n7omdIcz
8Lbmh7YY4e/so8CyyycYiK+xt0lvjkPAhysO7nIsiASrfOS8psJc5blfXQkV
A6dPLz29hoMndzYu020sJv30dc4ZyTpsTd84Cc1OtHXMZBcTXxBJsQ3VWxYM
hrOdcwDxhaE757zjCI8+z796aH0pCJ/CnrhrEh412x+jXCE5LXHjF+P40kB8
UdnhwEVyWtu09ogAua/04vX/PkkH4qWS7S4mua/WlvbLXtMMtHdda5B0DYCb
8aknH/KZaFTet24ree+mg1y9JySDscQ5zPcvea/HeYfE24SnPFdDakb0A3F4
8e8B3hImOnfs2ttNctqpwpK33DF+UOu33RJEclpWcz1f0LJSXLy3RUI02BdU
r56MdUmEp8rCygKEp5ctY8pvnfTH3V/3/aQymbAMfPtPTbgUyx1Xa9xJ80Zk
+AL3hmgmht0/16aQnObiphq85GIIJI4tbbhJctrlHe8ofuS7Pl5U6/JaGQj+
JUpvHpDvmjbs/P1qbSmiBv3n7NZ7wU+kbZsV8ZdUmchPh0SJPoS1n/s08wKy
se81nkcRfLKvfA0TKMUhJZltp4Z9MCVS2j0cz0SA3/zC2q2lGFy7Ul5A3BND
fe/j8/1Irv4rU3eb8GLmAcX0yDZfJES+6q8gvJgP6DF4pFCKoo91d8/we2Dt
saAwLW8myVWL1v+fF/V2262vEl5c3RS6P4PwwjnHRKGX8HRuXUlQ2xFP8JzU
8jzt//9/71g8sfUD0YdZDxEX7xAImNRkuDUzsTonMpKH7L+Pb7bEg9cb2bbV
70rI/uX9Sx/u2VgKy4z/VvFJPoeHlm/g0iByjys+nrhGdOOQ+cXbSiv8sMV1
YWoR0Y359LXtJ4j/WuKNYvfv55jjrpgfCGEicFe3RiLR7dgH3+TmioLxbHXc
3SX1JG+oFNic1yV5PuznbGNIPBxf7hhuUWOhblhily3xU30rh2/+iunQcy2v
0yV+Wtu+dEHyXjoWMe5N1cXnQDj/oB/vbxYqp09m+dnRIfnS/Ea6Rha2zFAj
SltY8CwsnRRQY6AK96sLXiSgQlXlt6sOC9YVd/yaKhg4OBT1e+/Zl2B18iQ+
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
vR75QyDCIaUvvJsCkQepT2/NvgHFLsO5pmtUWD/JNyG2VAbzltMg+6gaQqo2
roUlDUH3vb47I8ScxSj0PhJ95+2A0dh5rIezZ/9VfUG+xCn3XAp9h8e+R+Ys
8q3R7D0zyPlX/4gNOJOApk6o5jTyTe4NXkRf1/XqisRj1JeNulE+0dflaTps
JvwowzqiQg/96JzARW+ifzsvrBdD6HGF0n9KDuMdF759JfTYUn60YgO5R++G
9TGs/6U3uveI+vdp5Kv6TcynrtfUVlEv+7Z3niV8LeOT5gzRN0YcSrJlRS43
3SFL6LQs7+prov6rCnJPBmP99zPMlhN6SRPwamRFHs/I3DjiSIIh7ozbQsh5
nXbUETrq67XpWsX4jg02NkJHCooMw4ROuzOvMpIx/5/g46UyyKUfV/kuIReZ
dLfJwed60F8fLY9cJVRdaRvmSZo3ED6GeVh0lJyEkddz2gURujY3z7Sjx+e6
YJLbKom8MWav4lbkOyLeWT/A+Hct6QrEPsvri+iNiO91+ZaHjiWSANhSBJKR
XzvQ9seZmK+NxLNscL64OHrOkfheXf/91fedyCVf6lQm55Pg1dR+pyEiv+ef
Uh7UKXfFE5oKe2e4Wh9TV4o6FSn9XB2C86ldq7ai/ncylKq8NJpEn5Xyvjvc
jjo6ecvke+uwBwQyhj/1Rh0Zb2Ft88M++YRtasDRWRcoy9w37UL8uyQBqwf2
6KddahZ61IEAKO6+25uJfrq95k9HZAMFzNqaqxgXQ8Awa+vusj7U14naigts
VSCsL/pSvtoHPhv9PW6cgLr+74UGjQMFdpe2+3NZxcKaWNXAHBsVzqqlH4h5
Q8G+Y/a6d1EEXDxob5G2MAA2wWr3ZV/gPHsqTnZhKAb0n7Wo7dpKhX3JV/zM
GHBuFeoLYBPLgxg+rRV/Aex7M/g0jkyVQ0CAYnbuvjIY9YvoUP85CMp2HyUF
SspB8LkZdfJROYjk6ut1/zcET702cpmaKmBGqG4/zWQ+2A+amV+7OAg0xwOV
fDwowL3FLuxWcTTIxBZtd6WjglP0fGL49zKoq6dc4vGqhvq/0maC6UPgJHqh
plq3BBT2bhYZT2sG+Y4ktnafEUjdGVXYwV4BjSHxTnRLJZCTO67A0DMIquFX
FiIUK4FxwYTS7JMDKwGhR0d+UaFzNePWD3y/T69xHD5ExnkwTlj+BL7f95pb
Qwj+MKvERgC5Qe727QS/we1qSOiCedKlUxzrVn1VIorQhfOh0KxF5OXTM52a
GH9zy3gpEU9effuVqGfl+75no7CeJcLZbxL1/F/JsuUmrE+hr9skP2LfyGqx
W5yo27rQE/eI/NueeI6JYv6q5y3BRP7ARvtL35GbOpasOOP9kPOjOU2R+F2D
5H/wL/G7CZ36nDXGt7VtkAkdlafIWxI6reY5qhiN9T+jZdZL1P9j8nQtodM7
THrtn1Cn1fkcxoROt3kqMrAgd33Q/fU7xtPONg0TvkbafvLhDuSXD2z6IvYM
16UO1+4l/O7dvPA4rpsuUhZfj/dYf8hFPqJ/Vh0XntpO9LdDa/tNMP96c3fX
QeJ7VCBfLnE+f/KfnibOZ7CZsYQ4n02Spy2Je2nq6uk/Z1G/fjHn/tfReYdj
+UZxXEYqooiEhJBCtFTWoWRESSgkK5W0jAiheK2fkVVGFCEiO9nva2Vnl3ht
DS0qiqz63cdfXdfnOtd5bo/zvc/33M/jKRX3pT7pPPF4wi3lu98FRPuAyw75
/R6EF125Uo/+5NCMka0u8Sclr9Juoj8ZdnBS4CacTTXVK7/QB2rVuX8ME27c
3nKnh+i0033C/62eL9hYNx2SJTqVWJXjZL2vEjIO12v06PpBrCB7oZM/maOt
jl7tIP3UIvq1dRbpp1mfN57gIv20rvl7ZPmBSvh4avPbpLu+cHii4u1fkudr
lvyH62Q+LXKajrhK5lPG6fNPZsl8GvN+p+uxYqKjooxVrSmx0LS5d/oX8bG3
e3t/TrTRQDRHaTKLORoCcu6qJXaS9TjEbO+fpIHCtliBFrdICBYXythdRuaO
3PuHrEhfyzT7leC8IQ1eKjXfZrWhQ3f7pC430ftmw8f6u1tDwcXsNV8Y0bvk
cNW7O/5UMo8mTPQoZEPtrtZH92voEGmU97uYtQLOJeS65imWQrxh8cer/f2w
46f4nObRcsi58WjihwcN5Ixzeu0uDMAjmfmta4vLITB3F1+gazlUMe+Vesg7
AN83iM5du0eFUePnWv9uZAH/tsGDZ0vo5OeYS2FkowLbrnfPrNYUQPrPA4/l
NvfDQnclS5pcCUgKyD61Um0GCcupowVZQ9DoeNnNzbQUJB3rvowL1cMZP11T
2a5BmCxmPbbVgEr8nOjDnWvyIFLP7OSRT3RwSW18g/t8qpLzzAzRiz6lNh71
Ijd7v2OJ/N4VU0RCkkn9+L1h796Detl90IKVxAf3FsZRiH87ODffLk34dJb7
XhbCmT1/FP4l3OTc0gWc11IY+Ecx/pqDZsMFwmNf5Nlj/AzFLwnrM/NKbYwi
yW94I9ML63OCSf4oF4mP5j1nspHU+ZkQw1YxPH/2c9JdTzjj9agMPcLfNvgE
YP2XyhdLcqPuPNr/fCA6Olu/YQfGD/5Oi0bdqXRdGHpFdDfB+9YJdWdgGOqI
OlX9ejXlJ+YJYk1EnS68ffl+FeGxou7bZMg66WPSBdhPVV+2ymN+9jfOvWMk
v14ebQvm17DZShEk/LsMLaHLzQfGdpw8thl1Ov7GVYjwKDFhzXOEfwDFQQH0
t1eMH/IRbrOWujrP3Qce0s9tF8b1p9QO4XXX6MR77CTX5Si+V4TXDVO5v7sM
51CntZ9SyNxRy7TnOj7fGWjdGSKE88iipcPOAh/4/mdNMr5PKDlXyF2F71H8
8T3y8gAFHLgnYu4R3/v3QczPBdI3kw32x35+Q4ECPj+xBNI3R0e9/zkSPQYe
191sK+0PdQ46A6eIHley33SVI354l0JOHhO+5z+dfdwfn1Mzb5oUEyL7eZPe
R2HnIPji5P7qTgyZZ/MbmRvInOboxSh1+L8QKL1tLmT5qA8Y9v0yLSoifnhm
jUtEYSwErazqOveOzMVPZTTPPKTBYWOLmlbfeBiTuKL69zf5vf9VumHLXwmr
JAOfWWsHg2jiQKjKA8K19NNCmGiQfy+ve+BoGvHFe2Z6LtCheUJDu+MeDYLX
pebcvJkA84V3ug4t9kFTVMkTEVkaDI97e40Np4Aw7909gxp0uPF0p3DwxQp4
tcfIZF9UERwdXPlsy/1+4Cp47l64sRxUQw785HtfCQPWk0f8gwfApKb+TvLn
MrjZ9YGadL8K6JFxlgbZA1ArrrJrn3gFSFArhDTtiP7k2ze31PXDkD0LE4c5
DcKDPMudjjyGUyFHh66L0YHDW+fp6pwyyOdSdlS6VA3fvvBIrO0jvjfe3qrK
rwgOH2TV4+LtgHb3ifHxD8MQ/aHjV1FKGayM2Fj1LrQaDjBfXp80MgAbkjZr
YN/5ulN18gmp59xG/mnsO4Yxcrno3053r/orSHiE3tmd6N86hvQnOAkvXuV5
/yGpc70Gkf8kCK80PKSIfcR+XZl2COG33k3pIY/f+0d2A+G6+Wqhz0id55/4
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
J99CMDx8eJw3KKEP6i6zr5UgvrcseJhx33ggMIx83Hs2klz3b+CZJKZK2DF+
S7JdKhxGhOa8fmeSeUFDR6W9jQaemqaMPKuiIUSTpfFFJ/FjEsZaY1to8Nfh
tK19SSrYMfNyrD1JdFodPkKdp4KzwzanXw1pcHBG5PCxq3TweMz4bkcLDbqK
p+sDr0dDtr3cW6vXfXCwsXacfpcKjZnr7h58mQXnDJIWblTQwT5j6VDfBSrI
r/hx6/JiDugfiJVs76NDaFmuSs45GpwOWpkb8jsJOCYfyOoJ0+HVdN8v9Tzi
hx8Yq+U/LYdGvczFaIEB+NTAbxVqXAoiLjeky8Xrwexe5vnY7kGw9PI+fPtM
CWztFylXftoEhlwU7UOhQzCfY912irMUbLmE3HK3N8D6es14vdVD8LBw7Nie
inKQZG69PGtQDvWn+Nl7uAZgNoyJ32umApxXCfjyJBTACUfzMyrSZI4+1Xoa
6+cfG33xD6kr+5JOT6wftuGyJdRdqOfYHDupqyqn8Urkc8rj0lifz3o8C5pI
/HcJ11Gsz9/77TSRn9t4pqOW8H1JzG3I3Rs1dJBLmc3/Qr10Gci2IL/R8LUC
+QBnc0UG4QMibTeROylM+mGd59ecEfEkPCrD4D3WeZCEwz1cZ/SZkYCv2E83
GOrjekIdLbgxz73eMbN2wh+e2/ML82ikqzMhrzF79b2LcC0lZgaMb1x3/hDm
31+1USiE8Nt+IzzLOs0TNlruj4FDvwMIF2UVXYWcVeOZ31bCXwjUWKoT/rwh
XxLX02PrGYTr8fA+RJ0gfNjgsTHm13n4yQ7j/fJW6h8lPJLVUAnj63mHZnA9
zPLdIwmE95gfPYb5PSl52jifnnzXWzhP5tM0P0YqzqfPd5jI4/vGeSFbE/WC
iJ9/kt6B7yP5STXt9MH3PWIdRbgSfGApXCzwLq5Hq/iwBNFpwKoSu4+mFGhq
THZAnZ5UsuAwxfftsxfTY3kpcEL006OtpM8Oq341Obq/ErbIefuHj/hC5d3i
irWk3zW56Cc0kfl0KefS0WfDAeD83vbTbzKf/jWzn4lgJ7795NE/vmfuggX7
45TzqX3AbFsnFb23EkbyXEOl3P3gd/T0vdUBfRAYfyuC9pLMp2VpvxfEY6A6
jvMQX18f8GY88+HjrISecPfTa16FQimvlkZwMvFjzU/5jyjRgM/ne5aWeArQ
+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
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {{
        FormBox[
         StyleBox[
         "\"Sampling distance \[CapitalDelta]t  /  s\"", FontSize -> 16, 
          StripOnInput -> False], TraditionalForm], None}, {
        FormBox[
         StyleBox[
         "\"Samling interval \\!\\(\\*SubscriptBox[\\(t\\), \\(sample\\)]\\) \
\[Element] [-t, t]  /  s\"", FontSize -> 16, StripOnInput -> False], 
         TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "DarkColorDensityGradient"}, PlotLabel -> FormBox[
       StyleBox[
       "\"Root-scaled diff. between anal. result and fft\"", FontSize -> 16, 
        StripOnInput -> False], TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
yqUd/wfpBaax
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -112.49999999999999`}, {7.5, 
                112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -112.49999999999999`}, 
                    Offset[{4., 0}, {7.5, -112.49999999999999`}]}, {{
                    7.5, -59.37131050767414}, 
                    Offset[{4., 0}, {7.5, -59.37131050767414}]}, {{
                    7.5, -6.2426210153482815`}, 
                    Offset[{4., 0}, {7.5, -6.2426210153482815`}]}, {{7.5, 
                    46.88606847697757}, 
                    Offset[{4., 0}, {7.5, 46.88606847697757}]}, {{7.5, 
                    100.01475796930343`}, 
                    Offset[{4., 0}, {7.5, 100.01475796930343`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -99.21782762691852}, 
                    Offset[{2.5, 0.}, {7.5, -99.21782762691852}]}, {{
                    7.5, -85.93565525383707}, 
                    Offset[{2.5, 0.}, {7.5, -85.93565525383707}]}, {{
                    7.5, -72.6534828807556}, 
                    Offset[{2.5, 0.}, {7.5, -72.6534828807556}]}, {{
                    7.5, -46.08913813459267}, 
                    Offset[{2.5, 0.}, {7.5, -46.08913813459267}]}, {{
                    7.5, -32.80696576151121}, 
                    Offset[{2.5, 0.}, {7.5, -32.80696576151121}]}, {{
                    7.5, -19.524793388429746`}, 
                    Offset[{2.5, 0.}, {7.5, -19.524793388429746`}]}, {{7.5, 
                    7.039551357733182}, 
                    Offset[{2.5, 0.}, {7.5, 7.039551357733182}]}, {{7.5, 
                    20.321723730814647`}, 
                    Offset[{2.5, 0.}, {7.5, 20.321723730814647`}]}, {{7.5, 
                    33.603896103896126`}, 
                    Offset[{2.5, 0.}, {7.5, 33.603896103896126`}]}, {{7.5, 
                    60.168240850059036`}, 
                    Offset[{2.5, 0.}, {7.5, 60.168240850059036`}]}, {{7.5, 
                    73.4504132231405}, 
                    Offset[{2.5, 0.}, {7.5, 73.4504132231405}]}, {{7.5, 
                    86.73258559622197}, 
                    Offset[{2.5, 0.}, {7.5, 86.73258559622197}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.49999999999999`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -59.37131050767414}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -6.2426210153482815`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 46.88606847697757}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 100.01475796930343`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontFamily -> "Times"], 
                    Directive[
                    Opacity[1], FontFamily -> "Times"]}, StripOnInput -> 
                    False], 
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], FontFamily -> "Times"], 
                    Directive[
                    Opacity[1], FontFamily -> "Times"]}, StripOnInput -> 
                    False]}, {}}, {
                    Directive[
                    Opacity[1], FontFamily -> "Times"], 
                    Directive[
                    Opacity[1], FontFamily -> "Times"]}, StripOnInput -> 
                   False], "GraphicsLabel", StripOnInput -> False]}, 
                "GraphicsTicks", StripOnInput -> False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"BlueGreenYellow\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "2.588947594305975`*^-8", ",", "0.8468348993188886`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<DT_TSampling_Contour.png\>\""}], "}"}], "]"}], ",", "g3"}], 
  "]"}]], "Input"],

Cell[BoxData["\<\"C:\\\\Users\\\\Jelle\\\\Desktop\\\\coding\\\\\
ComputationalPhotonics\\\\Excercise_01\\\\A2\\\\DT_TSampling_Contour.png\"\>"]\
, "Output"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1116, 998},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 35, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[640, 26, 313, 9, 30, "Input"],
Cell[956, 37, 173, 6, 45, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1178, 49, 37, 0, 34, "Subsubsection"],
Cell[1218, 51, 395, 13, 50, "Input"],
Cell[1616, 66, 1902, 53, 183, "Input"],
Cell[CellGroupData[{
Cell[3543, 123, 5600, 148, 350, "Input"],
Cell[9146, 273, 54412, 1010, 260, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63595, 1288, 5751, 149, 348, "Input"],
Cell[69349, 1439, 57103, 1058, 260, "Output"]
}, Open  ]],
Cell[126467, 2500, 26, 0, 30, "Input"],
Cell[CellGroupData[{
Cell[126518, 2504, 512, 16, 50, "Input"],
Cell[127033, 2522, 157, 2, 30, "Output"],
Cell[127193, 2526, 164, 2, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127406, 2534, 40, 0, 34, "Subsubsection"],
Cell[127449, 2536, 2255, 63, 202, "Input"],
Cell[CellGroupData[{
Cell[129729, 2603, 1554, 38, 90, "Input"],
Cell[131286, 2643, 137868, 2315, 397, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269191, 4963, 258, 8, 30, "Input"],
Cell[269452, 4973, 156, 2, 30, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

