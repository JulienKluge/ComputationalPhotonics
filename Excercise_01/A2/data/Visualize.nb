(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     57021,       1248]
NotebookOptionsPosition[     56356,       1220]
NotebookOutlinePosition[     56700,       1235]
CellTagsIndexPosition[     56657,       1232]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"fftw", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<FFTW.csv\>\""}], 
       "}"}], "]"}], "]"}], "//", "Transpose"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fftwFit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Log", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
      "fftw"}], ",", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"a", "*", 
        RowBox[{"x", "^", "b"}], "*", 
        RowBox[{"Log", "[", "x", "]"}]}], "+", "c"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"5.618", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "10"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "1.17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "0"}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"naive", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<naiveDFT.csv\>\""}], "}"}], "]"}], "]"}], "//", "Transpose"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"naiveFit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"naive", ",", 
     RowBox[{"a", "*", 
      RowBox[{"x", "^", "b"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"6.6", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "8"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "2"}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"naiveIter", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<naiveDFTIter.csv\>\""}], "}"}], "]"}], "]"}], "//", 
    "Transpose"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"naiveIterFit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"naiveIter", ",", 
     RowBox[{"a", "*", 
      RowBox[{"x", "^", "b"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"6.6", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "8"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "2"}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simple", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<simpleDFT.csv\>\""}], "}"}], "]"}], "]"}], "//", "Transpose"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simpleFit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Log", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
      "simple"}], ",", 
     RowBox[{"Log", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"a", "*", 
        RowBox[{"x", "^", "b"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"5.7", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "7"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "1.1"}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matlab", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<matlab.csv\>\""}], 
      "}"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matlabFit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Log", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
      "matlab"}], ",", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"a", "*", 
        RowBox[{"x", "^", "b"}], "*", 
        RowBox[{"Log", "[", "x", "]"}]}], "+", "c"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"5.618", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "10"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "1.17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "0"}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
  ";"}]}], "Input"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit","sszero",
   "\"The step size in the search has become less than the tolerance \
prescribed by the PrecisionGoal option, but the gradient is larger than the \
tolerance specified by the AccuracyGoal option. There is a possibility that \
the method has stalled at a point that is not a local minimum.\"",2,116,45,
   30329232687067823694,"Local"},
  "MessageTemplate"]], "Message", "MSG"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Legended", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "fftw", ",", "naive", ",", "naiveIter", ",", "simple", ",", 
            "matlab"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Directive", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ColorData", "[", "97", "]"}], "@", "#"}], ",", 
                 RowBox[{"PointSize", "[", "0.0175", "]"}]}], "}"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Range", "[", "5", "]"}]}], ")"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LogLogPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"fftwFit", "[", "\"\<BestFit\>\"", "]"}], "]"}], ",", 
             RowBox[{"naiveFit", "[", "\"\<BestFit\>\"", "]"}], ",", 
             RowBox[{"naiveIterFit", "[", "\"\<BestFit\>\"", "]"}], ",", 
             RowBox[{"Exp", "[", 
              RowBox[{"simpleFit", "[", "\"\<BestFit\>\"", "]"}], "]"}], ",", 
             RowBox[{"Exp", "[", 
              RowBox[{"matlabFit", "[", "\"\<BestFit\>\"", "]"}], "]"}]}], 
            "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2", ",", 
            RowBox[{"5", "*", 
             RowBox[{"10", "^", "7"}]}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ColorData", "[", "97", "]"}], "/@", 
             RowBox[{"Range", "[", "5", "]"}]}], ")"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"Thread", "[", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Array size n\>\"", ",", "\"\<Calculation Time t [s]\>\""}], 
           "}"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "/@", 
        RowBox[{"Range", "[", "5", "]"}]}], ")"}], ",", 
      RowBox[{"Thread", "[", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<FFTW\>\"", ",", "\"\<Naive\>\"", ",", 
           "\"\<Naive-Iteration\>\"", ",", "\"\<Simple\>\"", ",", 
           "\"\<Matlab FFT\>\""}], "}"}], ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           CapForm["Butt"], 
           AbsoluteThickness[1.6], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           PointSize[0.0175]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQ/d7y1z8nvW/2VyyjRJf8VztQvNraftMiBgcRtesl
n/LVD0Dk2RySV5/oSk5TP5B9Yse+yzu5Hepyrh1PsVWHqhdwEPNZ3qBsq3Zg
4yep+VUZwg6lx9JlDkurQfWLOUh/j9A99l31gG7jzTjuLxIODxbUn3u3RhJq
nrTDESsDi9B6lQMr+WfIzamXc/BcveSKm6My1HwFB91QFneZPKUDQv7a+dNY
lRymudfLTpssD7VP2WHhdYOKnK0yBwKmcZ2PO63i4GAmeuVrtCTUfjWHab5f
tx6uFDvQd/elnvpEdYcn1n9XW08WhrpHw6GZz/Z22Sf+A2dUTva9D9NySFdp
2fKThRPqPm2H5QF1b83KGQ5w5ax4t11G1+GF4Vx3PaXv+yHu1XNoCzrTn7X7
xX6Pze1+DY/0HVw3lNakB2y3BwAA3aXh
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           CapForm["Butt"], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           PointSize[0.0175]], 
          
          PointBox[{{1.3862943611198906`, -12.82671313530337}, {
           2.0794415416798357`, -12.57545657906739}, {
           2.772588722239781, -11.258128219854225`}, {
           3.4657359027997265`, -9.973566728123501}, {
           4.1588830833596715`, -8.313379259284186}, {
           4.852030263919617, -7.13687087752414}, {
           5.545177444479562, -5.576984251527584}, {
           6.238324625039508, -3.4347976718250917`}, {
           6.931471805599453, -2.7052816510760453`}, {
           7.6246189861593985`, -1.2253776475247826`}, {8.317766166719343, 
           0.1600682126428942}}]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           CapForm["Butt"], 
           AbsoluteThickness[1.6], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           PointSize[0.0175]], 
          
          PointBox[{{1.3862943611198906`, -13.609472474553003`}, {
           2.0794415416798357`, -12.798614598916155`}, {
           2.772588722239781, -11.398490249236746`}, {
           3.4657359027997265`, -9.933204767324277}, {
           4.1588830833596715`, -8.711666684819736}, {
           4.852030263919617, -7.33674779879097}, {
           5.545177444479562, -5.933467826967191}, {
           6.238324625039508, -4.501247581629394}, {
           6.931471805599453, -3.006883760906881}, {
           7.6246189861593985`, -1.5971576958935332`}, {
           8.317766166719343, -0.19577687405304078`}, {9.010913347279288, 
           1.2675534917309526`}}]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           CapForm["Butt"], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           PointSize[0.0175]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/d7y1z8nvW/2z3tEF0vP1jlQvNraftMiBoeKeVOf
nzmqdQAiz+ZwqI3veqS05oHsEzv2Xd7J7XDtyBGh2h3qUPUCDiuC8r/YTFQ9
sPGT1PyqDGEHGWmZwulrVKD6xRxWXStbu1NE+YBu48047i8SDqXfNuqa9CtC
zZN2+PO9Iiv/ivyBlfwz5ObUyzk0/It+Lt8uAzVfwWHXkXkGGlclDgj5a+dP
Y1VysH31yeHPbDGofcoOIQY1e6LyhQ8ETOM6H3daxeFcUHF+grYg1H41h119
bdoqqrwH+u6+1FOfqO7wpj3uQLsuO9Q9Gg4bonz1Ln9iOHBG5WTf+zAthw0G
kVz6eV/2Q9yn7XC6p/+deMT9/Vw5K95tl9F1sN729UD71uv2AIZ0m/Y=
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           CapForm["Butt"], 
           AbsoluteThickness[1.6], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           PointSize[0.0175]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/d7y1z8nvW/2dRvlBdbdUThQvNraftMiBgd392vy
sU8VD0Dk2RxmrrXhZjVXO5B9Yse+yzu5HWSTD5+66qACVS/gcFjkIOe9CvUD
Gz9Jza/KEHY4a7hh9cWralD9Yg739j351W+jfkC38WYc9xcJhz1sm3/tXKwK
NU/a4e2Py3GpsqoHVvLPkJtTL+ewnukMi0krzHwFhy0/lryeek75gJC/dv40
ViUHFd2eqBkNSlD7lB0eLD1pWXtd/kDANK7zcadVHLT32RzLOCMHtV/N4YpF
wI9+e5kDfXdf6qlPVHdY3Tdp+sNQMah7NBxCXh5ijo4SPnBG5WTf+zAtB7Pf
zEvuPuCFuk/b4YWmo9WKA+wHuHJWvNsuo+vQK6+YXarBDHWvngNnaHt0UcCv
/R6b2/0aHuk7TBfZr/Lm47v9EPcbOJjoznki8H7Hfuda43CVEEMH60/8nS09
T+0BzCK4JA==
           "]]}, {}}}, {}, {}, {{}, {}}}}, {{{{}, {}, {
         Directive[
          Opacity[1.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
          "]]}, {
         Directive[
          Opacity[1.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         LineBox[CompressedData["
1:eJwVjHdUk2cchVnuEZQtQ0aCrIR8r7gL348iqKwKQdAgFFGCgzbg0SgBrBqs
NmihpCJ6ihqQoGKMHi1LDC9LMCjD2spGCkZERIYE2U3/uOc59zznXqtIbmCU
loaGhp86/3NWlFXswVCSjTq3N/m7MHDBCgtj3T1Kcpe4UjDKYOAfU6/z2gVK
stW162WmPQN3Cm+sPd6iJHt4hpE9FgwsPyOWSpLfk6q+ZOHJRQycxM0VL2rr
I81f7mvL7qTjaW/pLw3nP5KHL5smjV+g45nTnfeksUOktm0qvtnhhKe/RETG
uKpIm6jYHZaHHfHFzeHtz/KmSOYG+RY3igOW839/eiJBA04r8lY7PLHDhesf
/ZS7VxueJqTM8/Beg0+GUqjipfNBWdYWNDlMwyWd1C3rVQthxspW0plIxffM
xAfQqyUQ4rn0Q9pyGxxdyY6dTlwOWVPhl7uLrHBAL2dc9kAXGhvyPb73ssQs
07K87YtXQvcPigJVszmWyry79cP0QCI/9lyBTPG2UfRa+kIftvnovf0aaIy9
Pm4qktoYQtmM8Pn+Wwb4XHrWLv4VI9AbUBXYla7EZldcEvk6JtBc7ELRq6Rg
o539ou7dq8DtPT3YP3YxDiyaPmCgMAX2RUqu610dPPKavuaBtTnsnPRa63dp
tuzVzSfZRpkWEFJHOp3vGimbFyVn7dG2hPKr7NqKmx1lf7Hu+7PvW0LoRu47
UYCCdL/mKymPtoJNiz02hD77RHZv5vPa9a2hKoXJXVc4QdKF7kt+k1uDY9VQ
K8dBC0yIwul8ng3IFRGqUwMLYAMq5fCtqZB1ziLG3HcZjAm5dFk7Ffb3TgwI
UldARHppUZKIBjxtKYQd0YeZ0czSOVdbkE3/XD5hYASbpTbmfSpbWFYS4/bN
pAncwa4qQc4aSAuI73OXmkHV2WFRsa8dpHL8ZfmBq+GnP1i/7tKxh5YbRsUd
xlYQo+upmSuzh1PxpkQN1xom2nob2YccYN06Wp6gxwaKNfVNqgwdQTO84pHY
jQa0f9ppNdgRhNWV9cPptkBoBaUy453AllL3Xl/HDrgX2HF+NDr8XR115epe
e/DjUB40dtEhI3y+53CTA7wZCXv0KYMBBuuXaCaAE4hatjjL3Z1Bws9hcTLo
8NmodsHYpDN4i91vURc5A9kcd+8ziwlnrxV7ZhNM6EjwLXx4mwlyQTL4tDHB
x+fUkESHAO3wwJIwEQGvasbfHWerOXhozpJEECR8s3QslICA4JHR1d8ieONb
uPZYGAFNT/l9Fp4I2pt4Z45GqPvFlCYzHwTKtjEzLoeABgdpjnEIgqnPo6yD
Rwmo5wxt0+UioBoPlbOFBNR18tLmriOQtDb0taQQ4O01lzwrRmCfJaPsuUSA
Qno+fuYWAoY1NywkTd0TMyOn7iLY6DT4lZVBQO2qEpfxAgR+MODsl01ATfBM
82A9gkatF8EvcgjYLj/38lMTgsDq/CSfXLWnLa8YeI1gt/eRuh231fsvFvn9
rQgig/o5XvfVPh2SlEoEvYaKS9UyAjwna+PefUAQ3XLn8daHBDzbF8DpHUAQ
E35Iy+MxAdXMyO/+HUEwaLnDvuJPArZm9nt0jyGI67Hb6V6o9nNHN779iuBL
7sITuEj9Fz3l1DWFgHewL4ssIaCqXmDVOYvgP63dQe0=
          "]]}, {
         Directive[
          Opacity[1.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          RGBColor[0.560181, 0.691569, 0.194885]], 
         LineBox[CompressedData["
1:eJwVxXs0VAkAB2BEkTaSvBpiDBmMmTvX0VK6P2pTk+lYFEZ6qFDZpM20eYRV
uyWlGtHZqFV5xRg25ZHl9to6peNZTCa2xSQqIYSR3f3jO59VaJTvHg01NTXh
f/7/qySneo2TkmKsi4+VuvDoO4ssTPSDlFTaRNHb1ySPPpB+RaxIUVKqwnb/
hQSP7kq9SsbIlZRCl+RGOfDouuRcaf7xt1R287seniWPTojKy9Xp7KcYIQHC
Ch0erRJITzX+Oki59u+GuJpLzyR1lUgPfqLc1jafPq/FpVWfd4RGuo9TrtRk
9fFEDp3mtk3xV8E01SLpm/ZZ7EjXxWb8eSRODbZ9pnaepfZ0pcutxLytc3Dk
aM7gkD2b/ilYj5W7YC52hvfdF99bTtd0sVa6jGtj/aV4osbVli5h5O7mt+hi
4FFwKrOaRYc/EB1UxS+ErXB2fJevNf19b9iErEwf241HpnY+t6L9ltYXrJ9v
AP7KIgPXUEtaKhO8MQxZjMRKH/Y+lTntNcpvkzYYIuPYh+DOCTN63aBrldTa
CIovBne+2prQJy7kbI7NMgZj8uXqy6ZLaEaWc3yspilaR+yzk80MaGOfAcmb
QDMkUXqezlcW0r5Vqt1Lni6FIE+rKOCsNj3SxllexjRHfPQ327v7NOiW3+9e
M75kgdWSG71/nJys19pT5xc0xxLVvoqa7JmB+la/0k2iUkucCW27JjG/X+/x
m3f+vXAryIYTDuu09lBv3GLFCkMm7MtvC0a9xihOqofu+Tommj3Ea3Nc1GBK
VKqKxdZgXPX/ZZPnXKzg14bFMllQXbQ6elmpi7HUKI5MwUIMHThvWn0Rdlyo
rUqQ2CCu9lzCNg1DzIxeqp11t4VACw16jUZwk1qb94/bwuqJz3uvDlMU0e7j
KdeX40F7R+9zKQMPfx6WVHvb4eOHJu35McuQmO13drMmG/rUksSwVVaI1P9O
PU/GxlnpTN+BG0xMdvY2ifbaQ1+eebvGnoVqdUPTh0YOmLq5P5qTZQOblwqb
x7QD7JK+eMapbEFo+KfzjjpCZOCSsCDJDlEnRdFCGw6GBbLrD9+xIQzTK2vq
5iANcj4d7YD2kZBbHzKdEOl6tz1zxBES+UpunQcXZR0dERlBThgyfjJvbIqL
SeeC0BddXFAd0SVDfjy0XQ68YZHHw+s478ryQh6arrgyEUBg48Zjn/I1CQjV
fvRPMeGj5fFEX4yIwIzzU5W8gQ//1PYFY8EEgvkOq2Yb+Wj3riQPhxCo5abF
sVr5UDSLkw/tIBBrv2nqgJwPZecYIyqMwMSylok5Sj6mh0b9Ig4R+Dz/1Qhn
lg+Wyad7olQCg3+/608mSOS/auyXnyawoUtgV+BMgp0j0ws6Q+BmZ3F4wwoS
TsyokIBzBCJe/qA0Wk3iW8ePX/wyCSifDfcUC0gI8Z4rvEbgnzuTXS92kWjS
aNjScJ2AZ4XIYjqMhO+j4oSNeQRyy++GWO4jESjY/2xDIYGdJQmKfQdJhPoP
hK0rJdCdq/5qNp5Er9HTM49kBNyvhpraJJEIlxdVrC0nkJP9IFCQQiJy216N
NRUEtmadaM84ReKj5Qb2/dsEajKURjVpJKJ77Hw8KgmYXfDa0p1O4nOe9hG6
ikBceuFFTQkJcUR/DlVDQJ6m84KdSeJfpIM79Q==
          "]]}, {
         Directive[
          Opacity[1.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          RGBColor[0.922526, 0.385626, 0.209179]], 
         LineBox[CompressedData["
1:eJwVxX081HccAPBzlDp+HeUhheHOw8XRFy9rVL8PovLQ5JinzuwqldR1lTOH
VdO2uh6M87SalTjpdY4rD0fJfVWqoTz1muQkE1ErT4e1WFt/vF9vax4/dDeV
QqEE/+/T/0oK632dR0i34RsXjhazca2h5UqDqBHyjHaoqfgyGx/M/E2ozhgh
h6wnJZcK2fi5+JJbUu8IKYl1OdeSz8aNJ4rkpSdfkZoe2TGrs2yczpcWLe0b
JWtaSna1HWXj+QD56faf3pAeijxnpj8bLxx/Xi4/NEF6porudI864XlNHC9x
wyzp1CtwOW7phM96xqrvX/1ADqQb6+R+44gbRTm3k1MpUDvmJY4tW4OVHlXH
pDu0IcUiOzxpgIW/jaEzi/QXw3x+zikNg4VvPmd6ecwugYRn9ylNkQ643Lxo
l2uXHiwMpa7xybLHe+5GH5pPWwYh7v23HHvs8PaX8XOVCgPIDDqYzSPsMGe1
6uoW2nI4L5N1aG23xfLKgEEj7gqo6tyPwwuYePO06xN5mxE0qWJmZtsZ2P/N
F3VyhglkaeayKMYM/EN2Ybgo3xSCJu8eiQiwweb57mkiHTNwrFmuuzPDGpuG
vJYMRq6CVhVB7fndCofWze8yblkNEdnrfAooVnjqCdteYWMB/hGfPck4bYm7
Lt+6YlpgCdVm7ArBlDletLuRE6VtBQkJ8OYhbzXu5lRsi66wgpIt5XMTb82w
94Wg0qY91lBdm3y+KmolHvQUCdVGNuB/46LG/4UJZou99bIabcB6ffNt34PG
2Awp52VCBnSFbzPsU6/An7s2xItsmLB4wcXdN345nhHz2ZVqJtDdBYN+HQY4
LruhLl1iC7en+EM7M5bhhemCho8b7GBnQcWV/ot62FPOsBidtYNqbrnwbNIS
fA1vmM0otgfaxpgx9clF+N73k5L6IAeY9jS2oRRT8bFfOefDdVhArzQfUOh8
VCUa+GlJK1ngYylQlji/V73ve9kRvW8NtLb51lP7plT1WkZm90wcQc6bnNg8
PKay/UNt+wA7gtl6Ol12Sa1C1LDMtSlOkH9Capg8LVPxT0ULgm3ZcFLbIhzP
dJPB8XRFxwAbNGrPIwzFCNkzxa16m+cM47z+TiJ3kpT0erk0ertAhPWt8vvx
c+S46UPdmX9cIOHyqljj2gWSfCooH+eshQaN3j6DR1rQnxqkvF62FpRpH3f4
KnQgMPC7iVIdBIuH3dZ7d+lC14O54aRoBF+6KtMKG2kQJu7Rn4lBQGhNGMha
adATpHQ7ykXQ3e4grXtKA3Wn8MThOASRBy486p6iwUjfjDk/HkFcWbolzV4P
PoxPc/YeRpBiuQkLM/WAuXKiKVqMoITWqR0Spw+lz9pHe88g4PUuLeAe0AdW
YSU96hwCVpmP036RPjjb8LkRPyMo96sO+zFHH9Y5vfubk4eg5ni+tOGhPgTD
Xy7BVxA8nuVuZiECOqhtX7UVI8htzuvz2EhAaLMsPVCKgJPTzt8USEBkwP7W
rWUIXiDvgq93E8ALex3vX4FgNJE5lvsLAS9NWs41VyIo9eKmF5cSsKf3WvWm
6wgSaXmG16sISIzdR/WtRjB5Vdez7REB76y2su7UIKgQwuPeZwQIhhxCvJUI
kvxSeK9eEaCRLknGdQi8jG7MajQECPeOFpI3Ebz/87WYSl0G/wFDPz4Q
          "]]}, {
         Directive[
          Opacity[1.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          RGBColor[0.528488, 0.470624, 0.701351]], 
         LineBox[CompressedData["
1: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
7PG8o7OA+7mNJuEVaD/CA4PCbRbw/wNIlKp3
          "]]}}}, {}, {}}}, {FrameLabel -> {
       FormBox[
        StyleBox["\"Array size n\"", FontSize -> 16, StripOnInput -> False], 
        TraditionalForm], 
       FormBox[
        StyleBox[
        "\"Calculation Time t [s]\"", FontSize -> 16, StripOnInput -> False], 
        TraditionalForm]}, DisplayFunction -> Identity, GridLines -> {{}, {}},
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {0.7998719905875671, -15.433062071569012`}, 
     PlotRange -> {{1.0541613371015834`, 
      17.328679513998633`}, {-15.167972935643615`, 1.2675534917309526`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.7998719905875671, -15.433062071569012`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {{}, {}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1.0541613371015834`, 
      17.328679513998633`}, {-15.167972935643615`, 1.2675534917309526`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"FFTW\"", FontSize -> 14, StripOnInput -> False], 
       StyleBox["\"Naive\"", FontSize -> 14, StripOnInput -> False], 
       StyleBox["\"Naive-Iteration\"", FontSize -> 14, StripOnInput -> False], 
       StyleBox["\"Simple\"", FontSize -> 14, StripOnInput -> False], 
       StyleBox["\"Matlab FFT\"", FontSize -> 14, StripOnInput -> False]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                   None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.922526, 0.385626, 0.209179], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.528488, 0.470624, 0.701351], Editable -> False, 
                Selectable -> False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Comparison.pdf\>\""}], "}"}], "]"}], ",", "g"}], "]"}]], "Input"],

Cell[BoxData["\<\"C:\\\\Users\\\\Jelle\\\\Desktop\\\\coding\\\\\
ComputationalPhotonics\\\\Excercise_01\\\\A2\\\\data\\\\Comparison.pdf\"\>"], \
"Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "fftwFit", ",", "naiveFit", ",", "naiveIterFit", ",", "simpleFit", ",", 
    "matlabFit"}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"a", "8.977875443540625`*^-9", "9.377499724432118`*^-9", 
        "0.957384772846187`", "0.3503976743728894`"},
       {"b", "0.9726701523559547`", "0.0888783948385975`", 
        "10.94383122155071`", "1.207886510566751`*^-9"},
       {"c", "0.000010992956768214986`", "4.807345987032134`*^-6", 
        "2.2866997295115854`", "0.033862128259448926`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"a", "6.896732605949771`*^-8", "1.3059720015257546`*^-8", 
        "5.280919191140687`", "0.00050648604612608`"},
       {"b", "2.0017003774194313`", "0.022887008839735937`", 
        "87.46011291541609`", "1.6923545490094477`*^-14"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"a", "2.117739042395658`*^-8", "1.1515202613334173`*^-9", 
        "18.39081007522521`", "4.864999032208676`*^-9"},
       {"b", "2.101640824402385`", "0.006060012859753856`", 
        "346.8046806236892`", "9.774298300874842`*^-22"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"a", 
        RowBox[{"-", "1.7215136782064385`*^-7"}], "1.1658256019828184`*^-8", 
        RowBox[{"-", "14.766476866510002`"}], "1.6755541133337075`*^-11"},
       {"b", "1.0901614386325595`", "0.007943464524426593`", 
        "137.24004623930185`", "1.2232781782947223`*^-28"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"a", "3.0273172731842816`*^-10", "3.2994573118605244`*^-10", 
        "0.9175197576589387`", "0.3692883816597067`"},
       {"b", "1.1529757747467846`", "0.08083178875690455`", 
        "14.26389038864736`", "2.8277131848437882`*^-12"},
       {"c", "0.000025471723164819132`", "6.617774936027837`*^-6", 
        "3.8489860128286457`", "0.0009316511311338989`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False]}], "}"}]], "Output"]
}, Open  ]]
},
WindowSize->{1920, 1007},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 5244, 170, 202, "Input"],
Cell[5827, 194, 438, 8, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6302, 207, 2992, 77, 126, "Input"],
Cell[9297, 286, 41630, 799, 252, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50964, 1090, 244, 7, 30, "Input"],
Cell[51211, 1099, 154, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51402, 1106, 244, 7, 30, "Input"],
Cell[51649, 1115, 4691, 102, 93, "Output"]
}, Open  ]]
}
]
*)

